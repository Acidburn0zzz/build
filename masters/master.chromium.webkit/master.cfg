# Copyright (c) 2010 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot import locks
from buildbot.changes import svnpoller
from buildbot.scheduler import Dependent
from buildbot.scheduler import Nightly
from buildbot.scheduler import Periodic
from buildbot.scheduler import Scheduler
from buildbot.scheduler import Triggerable
from buildbot.status.mail import MailNotifier

from master import build_utils
from master import master_config
from master import master_utils
from master import slaves_list

from master.factory import chromium_factory
from master.factory import gyp_factory

import config

ActiveMaster = config.Master.ChromiumWebkit

STATUS_PUSH = False

CLANG_NOTIFIER = ActiveMaster.is_production_host

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}


####### CHANGESOURCES

def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude o3d from triggering builds on chrome for now.
  if path.startswith('src/o3d/'):
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

def WebkitFileSplitter(path):
  """split_file for webkit.org repository."""
  projects = ['trunk']
  return build_utils.SplitPath(projects, path)

# Rev link urls.
chromium_rev="http://src.chromium.org/viewvc/chrome?view=rev&revision=%s"
webkit_rev="http://trac.webkit.org/changeset/%s"

# Polls config.Master.trunk_url for changes
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

## Polls webkit.org repository.
webkit_poller = svnpoller.SVNPoller(
                    svnurl = config.Master.webkit_root_url,
                    split_file=WebkitFileSplitter,
                    pollinterval=30,
                    revlinktmpl=webkit_rev)

c['change_source'] = [trunk_poller, webkit_poller]


####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.
s_chromium = Scheduler(name='chromium',
                       branch='src',
                       treeStableTimer=60,
                       builderNames=['Webkit Win',
                                     'Webkit Win (dbg)',
                                     'Webkit Linux',
                                     'Webkit Linux (dbg)',
                                     'Webkit Linux (valgrind)',
                                     'Webkit Mac',
                                     'Webkit Mac (dbg)',
                                     'Mac10.6 Perf',
                                     'Mac10.6 Clang',
                                     'Linux Tests',
                                     'Linux Perf',
                                     'Mac10.6 Tests',
                                     'Win Builder (dbg shared)'])

# Scheduler to trigger when webkit.org is updated.
s_webkit_rel_webkit_org = Scheduler(name='webkit_rel_webkit_org',
    branch='trunk',
    treeStableTimer=60,
    builderNames=['Webkit Win',
                  'Webkit Win (dbg)',
                  'Webkit Linux',
                  'Webkit Linux (dbg)',
                  'Webkit Linux (valgrind)',
                  'Webkit Mac',
                  'Webkit Mac (dbg)',
                  'Mac10.6 Perf',
                  'Mac10.6 Clang',
                  'Linux Tests',
                  'Linux Perf',
                  'Mac10.6 Tests',               
                  'Win Builder (dbg shared)'])


# Create the triggerable scheduler for the reliability tests.
s_webkit_reliability = Triggerable(name='reliability',
                                   builderNames=['Win Reliability'])


# Schedulers for building Chromium with WebKit TOT when Chromium code changes.
s_webkit_org_rel_builder = Scheduler(name='webkit_rel_builder',
    branch='src',
    treeStableTimer=60,
    builderNames=['Win Builder'])

s_webkit_org_dbg_builder = Scheduler(name='webkit_dbg_builder',
    branch='src',
    treeStableTimer=60,
    builderNames=['Win Builder (dbg)'])

s_webkit_org_rel_reliability_builder = Scheduler(
    name='webkit_rel_reliability_builder',
    branch='src',
    treeStableTimer=60,
    builderNames=['Win Reliability Builder'])


# Schedulers to trigger slaves that depend on the webkit.org release build.
s_webkit_rel_org_builder_dependent = Dependent('webkit_release_dependent',
                                               s_webkit_org_rel_builder,
                                               ['Vista Perf',
                                                'Vista Tests'])

s_webkit_dbg_org_builder_dependent = Dependent('webkit_debug_dependent',
                                               s_webkit_org_dbg_builder,
                                               ['XP Tests (dbg)'])

# Scheduler for building Chromium with WebKit TOT when WebKit code changes.
s_webkit_org_rel_builder_webkit = Scheduler(name='webkit_org_rel_builder',
    branch='trunk',
    treeStableTimer=60,
    builderNames=['Win Builder'])

s_webkit_org_dbg_builder_webkit = Scheduler(name='webkit_org_dbg_builder',
    branch='trunk',
    treeStableTimer=60,
    builderNames=['Win Builder (dbg)'])

s_webkit_org_rel_reliability_builder_webkit = Scheduler(
    name='webkit_org_rel_reliabilitybuilder',
    branch='trunk',
    treeStableTimer=60,
    builderNames=['Win Reliability Builder'])

# Scheduler to trigger slaves that depend on the webkit.org release build.
s_webkit_rel_org_builder_dependent_webkit = Dependent(
    'webkit_org_release_dependent',
    s_webkit_org_rel_builder_webkit,
    ['Vista Perf',
     'Vista Tests'])

s_webkit_dbg_org_builder_dependent_webkit = Dependent(
    'webkit_org_debug_dependent',
    s_webkit_org_dbg_builder_webkit,
    ['XP Tests (dbg)'])


c['schedulers'] = [s_chromium,
                   s_webkit_rel_webkit_org,
                   s_webkit_reliability,
                   s_webkit_org_rel_builder,
                   s_webkit_org_dbg_builder,
                   s_webkit_org_rel_reliability_builder,
                   s_webkit_rel_org_builder_dependent,
                   s_webkit_dbg_org_builder_dependent,
                   s_webkit_org_rel_builder_webkit,
                   s_webkit_org_dbg_builder_webkit,
                   s_webkit_org_rel_reliability_builder_webkit,
                   s_webkit_rel_org_builder_dependent_webkit,
                   s_webkit_dbg_org_builder_dependent_webkit]

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

F = chromium_factory.ChromiumFactory
def win(): return F('src/build', 'win32')
def win_webkit(): return F('src/webkit', 'win32')
def mac(): return F('src/build', 'darwin')
def linux(): return F('src/build', 'linux2')

webkit_rel_archive = master_config.GetArchiveUrl('ChromiumWebkit',
                                                 'Win Builder',
                                                 'webkit-rel-builder', 'win32')
webkit_dbg_archive = master_config.GetArchiveUrl('ChromiumWebkit',
                                                 'Win Builder (dbg)',
                                                 'webkit-dbg-builder', 'win32')
webkit_rel_perf_archive = 'http://master.chromium.org:8801/b/build/slave' \
                          '/webkit-rel-builder/chrome_staging/' \
                          'full-build-win32.zip'

# This builder is run on Linux, thus we use linux() here, although it is to
# fetch reliability test results for Windows build.
f_webkit_reliability = linux().ReliabilityTestsFactory('win_webkit_canary')

f_webkit_rel_builder = win().ChromiumWebkitLatestFactory(
    slave_type='Builder',
    project='all.sln;chromium_builder',
    factory_properties={'gclient_env': {'GYP_DEFINES' : 'fastbuild=1'}})

f_webkit_dbg_builder = win().ChromiumWebkitLatestFactory(
    target='Debug',
    slave_type='Builder',
    project='all.sln;chromium_builder',
    factory_properties={'gclient_env': {'GYP_DEFINES' : 'fastbuild=1'}})

f_webkit_rel_reliability_builder = win().ChromiumWebkitLatestFactory(
    clobber=True,
    tests=['automated_ui', 'reliability'],
    slave_type='Builder',
    project='all.sln',
    factory_properties={'archive_build': True,
                        'use_build_number': True})

f_webkit_rel_webkit_org = win_webkit().ChromiumWebkitLatestFactory(
    tests=['test_shell', 'webkit', 'webkit_gpu', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'gclient_env': {'GYP_DEFINES' : 'fastbuild=1'}})

f_webkit_dbg_webkit_org = win_webkit().ChromiumWebkitLatestFactory(
    target='Debug',
    tests=['test_shell', 'webkit', 'webkit_gpu', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'gclient_env': {'GYP_DEFINES' : 'fastbuild=1'}})

f_webkit_rel_linux_webkit_org = linux().ChromiumWebkitLatestFactory(
    tests=['test_shell', 'webkit', 'webkit_gpu', 'webkit_unit'],
    options=['--build-tool=make', 'test_shell', 'test_shell_tests',
             'webkit_unit_tests', 'DumpRenderTree'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'gclient_env': {'GYP_GENERATORS' : 'make'}})

f_webkit_dbg_linux_webkit_org = linux().ChromiumWebkitLatestFactory(
    target='Debug',
    tests=['test_shell', 'webkit', 'webkit_gpu', 'webkit_unit'],
    options=['--build-tool=make', 'test_shell', 'test_shell_tests',
             'webkit_unit_tests', 'DumpRenderTree'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'gclient_env': {'GYP_GENERATORS' : 'make'}})

valgrind_gyp_defines = chromium_factory.ChromiumFactory.MEMORY_TOOLS_GYP_DEFINES
f_webkit_rel_linux_valgrind_webkit_org = linux().ChromiumWebkitLatestFactory(
    tests=['valgrind_test_shell'],
    options=['--build-tool=make', 'test_shell', 'test_shell_tests'],
    factory_properties={
        'needs_valgrind' : True,
        'gclient_env': { 'GYP_DEFINES' : valgrind_gyp_defines,
                         'GYP_GENERATORS' : 'make'}})

f_webkit_rel_mac_webkit_org = mac().ChromiumWebkitLatestFactory(
    tests=['test_shell', 'webkit', 'webkit_gpu', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com'},
    options=['--', '-project',
             '../webkit/webkit.xcodeproj'])

f_webkit_dbg_mac_webkit_org = mac().ChromiumWebkitLatestFactory(
    target='Debug',
    tests=['test_shell', 'webkit', 'webkit_gpu', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com'},
    options=['--', '-project',
             '../webkit/webkit.xcodeproj'])


f_cr_rel_perf_vista_webkit = win().ChromiumWebkitLatestFactory(
    slave_type='Tester',
    build_url=webkit_rel_perf_archive,
    tests=['page_cycler', 'dom_perf', 'selenium', 'sunspider'],
    factory_properties={'perf_id': 'chromium-rel-vista-webkit',
                        'show_perf_results': True,
                        'start_crash_handler': True})

f_cr_rel_tests_vista_webkit = win().ChromiumWebkitLatestFactory(
    slave_type='Tester',
    build_url=webkit_rel_archive,
    tests=['unit', 'ui', 'dom_checker', 'installer', 'nacl_ui'],
    factory_properties={'perf_id': 'chromium-rel-vista-webkit',
                        'show_perf_results': True,
                        'start_crash_handler': True,
                        'test_results_server': 'test-results.appspot.com'})

f_cr_dbg_tests_xp_webkit = win().ChromiumWebkitLatestFactory(
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_archive,
    tests=['ui', 'unit', 'browser_tests', 'interactive_ui', 'nacl_ui'],
    factory_properties={'start_crash_handler': True,
                        'generate_gtest_json': True})

f_cr_rel_tests_linux_webkit = linux().ChromiumWebkitLatestFactory(
    options=['--build-tool=make'],
    tests=['ui', 'unit', 'browser_tests', 'interactive_ui', 'nacl_ui'],
    factory_properties={'generate_gtest_json': True})

f_cr_rel_tests_mac_webkit = mac().ChromiumWebkitLatestFactory(
    options=['--', '-target', 'chromium_builder_tests'],
    tests=['ui', 'unit', 'browser_tests', 'interactive_ui', 'nacl_ui'],
    factory_properties={'gclient_env': {'GYP_GENERATORS' : 'make'},
                        'generate_gtest_json': True})

f_cr_rel_perf_linux_webkit = linux().ChromiumWebkitLatestFactory(
    options=['--build-tool=make'],
    tests=['startup', 'page_cycler', 'dromaeo', 'page_cycler_http'],
    factory_properties={'perf_id': 'chromium-rel-linux-webkit',
                        'show_perf_results': True,
                        'gclient_env': {'GYP_GENERATORS' : 'make'}})

f_cr_rel_perf_mac6_webkit = mac().ChromiumWebkitLatestFactory(
    options=['--', '-target', 'chromium_builder_rel'],
    tests=['page_cycler', 'page_cycler_http', 'startup', 'tab_switching',
           'memory', 'v8_benchmark', 'sunspider', 'dom_perf', 'dromaeo'],
    factory_properties={'show_perf_results': True,
                        'perf_id': 'chromium-rel-mac6-webkit'})

f_cr_dbg_mac_clang_webkit = mac().ChromiumWebkitLatestFactory(
    target='Debug',
    options=[
        '--compiler=clang',
        '--', '-project', '../webkit/webkit.xcodeproj',
        ],
    tests=[],
    factory_properties={
        'gclient_env': {'GYP_DEFINES': 'clang=1'}})

f_cr_dbg_win_shared = win().ChromiumWebkitLatestFactory(
    project='all.sln',
    compile_timeout=2400,
    factory_properties={
        'gclient_env': {'GYP_DEFINES': 'component=shared_library'}})

# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_webkit_rel_builder = {'name': 'Win Builder',
  'builddir': 'webkit-rel-builder',
  'factory': f_webkit_rel_builder,
  'category': '1windows',
}

b_webkit_dbg_builder = {'name': 'Win Builder (dbg)',
  'builddir': 'webkit-dbg-builder',
  'factory': f_webkit_dbg_builder,
  'category': '1windows',
}

b_webkit_dbg_builder_shared = {'name': 'Win Builder (dbg shared)',
  'factory': f_cr_dbg_win_shared,
  'category': '1windows',
}

b_webkit_rel_reliability_builder = {
  'name': 'Win Reliability Builder',
  'builddir': 'webkit-rel-reliability-builder',
  'factory': f_webkit_rel_reliability_builder,
  'category': '1windows',
}

b_webkit_reliability = {'name': 'Win Reliability',
  'builddir': 'webkit-reliability-tester',
  'slavename': 'chromium-reliability',
  'factory': f_webkit_reliability,
  'category': '1windows',
}

b_webkit_rel_webkit_org = {
  'name': 'Webkit Win',
  'builddir': 'webkit-rel-webkit-org',
  'factory': f_webkit_rel_webkit_org,
  'category': '1windows'
}

b_webkit_dbg_webkit_org = {
  'name': 'Webkit Win (dbg)',
  'builddir': 'webkit-dbg-webkit-org',
  'factory': f_webkit_dbg_webkit_org,
  'category': '1windows'
}

b_webkit_rel_linux_webkit_org = {
  'name': 'Webkit Linux',
  'builddir': 'webkit-rel-linux-webkit-org',
  'factory': f_webkit_rel_linux_webkit_org,
  'category': '3linux'
}

b_webkit_dbg_linux_webkit_org = {
  'name': 'Webkit Linux (dbg)',
  'builddir': 'webkit-dbg-linux-webkit-org',
  'factory': f_webkit_dbg_linux_webkit_org,
  'category': '3linux'
}

b_webkit_rel_linux_valgrind_webkit_org = {
  'name': 'Webkit Linux (valgrind)',
  'builddir': 'webkit-rel-linux-valgrind-webkit-org',
  'factory': f_webkit_rel_linux_valgrind_webkit_org,
  'category': '3linux'
}

b_webkit_rel_mac_webkit_org = {
  'name': 'Webkit Mac',
  'builddir': 'webkit-rel-mac-webkit-org',
  'factory': f_webkit_rel_mac_webkit_org,
  'category': '2mac'
}

b_webkit_dbg_mac_webkit_org = {
  'name': 'Webkit Mac (dbg)',
  'builddir': 'webkit-dbg-mac-webkit-org',
  'factory': f_webkit_dbg_mac_webkit_org,
  'category': '2mac'
}

b_chromium_rel_linux_tests_webkit_latest = {
  'name': 'Linux Tests',
  'factory': f_cr_rel_tests_linux_webkit,
  'category': '3linux'
}

b_chromium_rel_linux_perf_webkit_latest = {
  'name': 'Linux Perf',
  'factory': f_cr_rel_perf_linux_webkit,
  'category': '3linux'
}

b_chromium_rel_mac_tests_webkit_latest = {
  'name': 'Mac10.6 Tests',
  'factory': f_cr_rel_tests_mac_webkit,
  'category': '2mac'
}

b_chromium_rel_mac6_perf_webkit_latest = {
  'name': 'Mac10.6 Perf',
  'builddir': 'chromium-rel-perf-mac6-webkit-latest',
  'factory': f_cr_rel_perf_mac6_webkit,
  'category': '2mac'
}

b_chromium_dbg_mac_clang_webkit_latest = {
  'name': 'Mac10.6 Clang',
  'builddir': 'chromium-dbg-mac-clang-webkit-latest',
  'factory': f_cr_dbg_mac_clang_webkit,
  'category': '2mac'
}

b_chromium_rel_vista_perf_webkit_latest = {
  'name': 'Vista Perf',
  'builddir': 'chromium-rel-perf-vista-webkit-latest',
  'factory': f_cr_rel_perf_vista_webkit,
  'category': '1windows'
}

b_chromium_rel_vista_tests_webkit_latest = {
  'name': 'Vista Tests',
  'builddir': 'chromium-rel-tests-vista-webkit-latest',
  'factory': f_cr_rel_tests_vista_webkit,
  'category': '1windows'
}

b_chromium_dbg_xp_tests_webkit_latest = {
  'name': 'XP Tests (dbg)',
  'builddir': 'chromium-dbg-tests-xp-webkit-latest',
  'factory': f_cr_dbg_tests_xp_webkit,
  'category': '1windows',
  'auto_reboot': True,
}

c['builders'] = [
  b_webkit_rel_webkit_org,
  b_webkit_dbg_webkit_org,
  b_webkit_rel_linux_webkit_org,
  b_webkit_dbg_linux_webkit_org,
  b_webkit_rel_mac_webkit_org,
  b_webkit_dbg_mac_webkit_org,
  b_webkit_rel_builder,
  b_webkit_dbg_builder,
  b_webkit_rel_reliability_builder,
  b_webkit_reliability,
  b_webkit_dbg_builder_shared,
  b_chromium_rel_vista_perf_webkit_latest,
  b_chromium_rel_vista_tests_webkit_latest,
  b_chromium_dbg_xp_tests_webkit_latest,
  b_chromium_rel_linux_perf_webkit_latest,
  b_chromium_rel_linux_tests_webkit_latest,
  b_chromium_rel_mac6_perf_webkit_latest,
  b_chromium_rel_mac_tests_webkit_latest,
  b_chromium_dbg_mac_clang_webkit_latest,
  b_webkit_rel_linux_valgrind_webkit_org,
]

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumWebkit')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])


####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)


####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
                             public_html="../master.chromium/public_html")

####### PROJECT IDENTITY

# Buildbot master url:
c['buildbotURL'] = 'http://build.chromium.org/buildbot/chromium.webkit/'
