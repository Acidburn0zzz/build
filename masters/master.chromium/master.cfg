# -*- python -*-
# ex: set syntax=python:

# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is the buildmaster config file for the 'chromium' bot. It must
# be installed as 'master.cfg' in your buildmaster's base directory
# (although the filename can be changed with the --basedir option to
# 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

# This file follows this naming convention:
# Factories: f_cr_[dbg/rel]_[type]
# Builders:  b_chromium_[dbg/rel]_[os]_[type]
# BuildDir:  chromium-[dbg/rel]-[os]-[type]
#
# os = xp/vista/linux/mac
# type = perf/tests/full/jsc/webkit_latest

from buildbot import locks
from buildbot.buildslave import BuildSlave
from buildbot.changes import svnpoller
from buildbot.steps import shell
from buildbot.scheduler import Dependent
from buildbot.scheduler import Nightly
from buildbot.scheduler import Scheduler
from buildbot.scheduler import Triggerable

# Reload all the python files under master and common
import master
reload(master)
import common
reload(common)

# These modules come from scripts/master, which must be in the PYTHONPATH.
import build_utils
import chromium_step
from master.factory import chromium_factory
from master.factory import chromium_modules_factory
import master_utils
import slaves_list

# These modules come from scripts/common, which must be in the PYTHONPATH.
import chromium_config as config
import chromium_utils
import perf_notifier

ActiveMaster = config.Master.Chromium

# Only the production Chromium Buildbot acts as the tree gatekeeper.
TREE_GATE_KEEPER = ActiveMaster.is_production_host
GOOD_REVISIONS = ActiveMaster.is_production_host
# Enable PERF_NOTIFIER in production to send cmp@google.com perf alerts.
PERF_NOTIFIER = ActiveMaster.is_production_host

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# 'slavePortnum' defines the TCP port to listen on. This must match the value
# configured into the buildslaves (with their --master option)
c['slavePortnum'] = ActiveMaster.slave_port

# Disable compression for the stdio files.
c['logCompressionLimit'] = False

# Load the list of slaves.
slaves = slaves_list.SlavesList('slaves.cfg', 'Chromium')

####### CHANGESOURCES

# the 'change_source' list tells the buildmaster how it should find out about
# source code changes. Any class which implements IChangeSource can be added
# to this list: there are several in buildbot/changes/*.py to choose from.
def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude o3d from triggering builds on chrome for now.
  if path.startswith('src/o3d/'):
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

# Polls config.Master.trunk_url for changes
chromium_rev="http://src.chromium.org/viewvc/chrome?view=rev&revision=%s"
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

c['change_source'] = [trunk_poller]


####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.
s_chromium = Scheduler(name='chromium',
                       branch='src',
                       treeStableTimer=60,
                       builderNames=['Chromium XP',
                                     'Chromium Mac',
                                     'Chromium Arm',
                                     'Chromium Linux',
                                     'Chromium Linux x64',
                                     'Linux Perf (1)',
                                     'Linux Perf (2)',
                                     'Webkit Linux',
                                     'Modules XP',
                                     'Modules XP (dbg)',
                                     'Modules Vista',
                                     'Modules Vista (dbg)',
                                     'Modules Linux',
                                     'Modules Linux (dbg)',
                                     'Chromium Arm (dbg)',
                                     'Linux Builder (Views dbg)',
                                     'Linux Builder (ChromiumOS)',
                                     'Linux Builder (ChromiumOS dbg)',
                                     'Modules Mac10.5',
                                     'Modules Mac10.5 (dbg)',
                                     'Modules Mac10.6',
                                     'Modules Mac10.6 (dbg)',
                                    ])

# Create the triggerable scheduler for the reliability tests.
s_chromium_reliability = Triggerable(name='reliability',
                                     builderNames=['Chromium Reliability'])

# Scheduler to trigger slaves that depend on the release build.
s_chromium_rel_builder = Scheduler(name='chromium_rel_builder',
                                   branch='src',
                                   treeStableTimer=60,
                                   builderNames=['Chromium Builder'])

s_chromium_rel_dependent = Dependent('chromium_rel_dependent',
                                     s_chromium_rel_builder,
                                     ['XP Tests',
                                      'Vista Tests',
                                      'NACL Tests',
                                      'NACL Tests (x64)',
                                      'Chrome Frame Tests (ie6)',
                                      'Chrome Frame Tests (ie7)',
                                      'Chrome Frame Tests (ie8)',
                                      'XP Perf (1)',
                                      'XP Perf (2)',
                                      'XP Interactive Perf',
                                      'Vista Perf (1)',
                                      'Vista Perf (2)',
                                      'Vista Interactive Perf',
                                     ])

# Scheduler to trigger slaves that depend on the mac release build.
s_chromium_rel_mac_builder = Scheduler(name='chromium_rel_mac_builder',
                                       branch='src',
                                       treeStableTimer=60,
                                       builderNames=['Chromium Mac Builder'])

s_chromium_rel_mac_dependent = Dependent('chromium_rel_mac_dependent',
                                         s_chromium_rel_mac_builder,
                                         ['Mac10.5 Tests',
                                          'Mac10.5 Perf(1)',
                                          'Mac10.5 Perf(2)',
                                          'Mac10.5 Perf(3)',
                                          'Mac10.6 Tests',
                                          'Mac10.6 Perf(1)',
                                          'Mac10.6 Perf(2)',
                                          'Mac10.6 Perf(3)',
                                         ])


# Scheduler to trigger slaves that depend on the debug build.
s_chromium_dbg_builder = Scheduler(name='chromium_dbg_builder',
                                   branch='src',
                                   treeStableTimer=60,
                                   builderNames=['Chromium Builder (dbg)'])

s_chromium_dbg_dependent = Dependent('chromium_dbg_dependent',
                                     s_chromium_dbg_builder,
                                     ['XP Tests (dbg)(1)',
                                      'XP Tests (dbg)(2)',
                                      'XP Tests (dbg)(3)',
                                      'XP Tests (dbg)(4)',
                                      'Vista Tests (dbg)(1)',
                                      'Vista Tests (dbg)(2)',
                                      'Vista Tests (dbg)(3)',
                                      'Vista Tests (dbg)(4)',
                                      'Interactive Tests (dbg)',
                                      'XP Perf (dbg)',
                                      'Vista Perf (dbg)'
                                     ])

# Scheduler to trigger slaves that depend on the mac debug build.
s_chromium_dbg_mac_builder = Scheduler(name='chromium_dbg_mac_builder',
                                   branch='src',
                                   treeStableTimer=60,
                                   builderNames=['Chromium Mac Builder (dbg)'])

s_chromium_dbg_mac_dependent = Dependent('chromium_dbg_mac_dependent',
                                         s_chromium_dbg_mac_builder,
                                         ['Mac10.5 Tests (dbg)(1)',
                                          'Mac10.5 Tests (dbg)(2)',
                                          'Mac10.5 Tests (dbg)(3)',
                                          'Mac10.6 Tests (dbg)(1)',
                                          'Mac10.6 Tests (dbg)(2)',
                                          'Mac10.6 Tests (dbg)(3)',
                                         ])

# Scheduler to trigger slaves that depend on the linux release x64 build.
s_chromium_rel_linux_builder_64 = Scheduler(
    name='chromium_rel_linux_builder_64',
    branch='src',
    treeStableTimer=60,
    builderNames=['Chromium Linux Builder x64'])

s_chromium_rel_linux_dependent_64 = Dependent(
    'chromium_rel_linux_dependent_64',
    s_chromium_rel_linux_builder_64,
    ['Linux Tests x64',
    #TODO(mmoss) 'Linux Perf x64 (1)',
    #TODO(mmoss) 'Linux Perf x64 (2)',
    ])

# Scheduler to trigger slaves that depend on the linux debug build.
s_chromium_dbg_linux_builder = Scheduler(name='chromium_dbg_linux_builder',
                               branch='src',
                               treeStableTimer=60,
                               builderNames=['Chromium Linux Builder (dbg)'])

s_chromium_dbg_linux_dependent = Dependent('chromium_dbg_linux_dependent',
                                 s_chromium_dbg_linux_builder,
                                 ['Linux Tests (dbg)(1)',
                                  'Linux Tests (dbg)(2)',
                                 ])

# Scheduler to trigger slaves that depend on the linux dgb-shlib build.
s_chromium_dbg_linux_shared_builder = Scheduler(
    name='chromium_dbg_linux_shared_builder',
    branch='src',
    treeStableTimer=60,
    builderNames=['Chromium Linux Builder (dbg-shlib)'])

s_chromium_dbg_linux_shared_dependent = Dependent(
    'chromium_dbg_linux_shared_dependent',
    s_chromium_dbg_linux_shared_builder,
    [])

# Scheduler to trigger slaves that depend on the webkit release build.
s_webkit_rel_builder = Scheduler(name='webkit_rel_builder',
                                 branch='src',
                                 treeStableTimer=60,
                                 builderNames=['Webkit Builder'])

s_webkit_rel_builder_dependent = Dependent('webkit_release_dependent',
                                           s_webkit_rel_builder,
                                           ['Webkit'])

# Scheduler to trigger slaves that depend on the webkit mac release build.
s_webkit_rel_mac_builder = Scheduler(name='webkit_rel_mac_builder',
                                     branch='src',
                                     treeStableTimer=60,
                                     builderNames=['Webkit Mac Builder'])

s_webkit_rel_mac_builder_dependent = Dependent('webkit_release_mac_dependent',
                                               s_webkit_rel_mac_builder,
                                               ['Webkit Mac10.5'])

# Scheduler to trigger slaves that depend on the webkit debug build.
s_webkit_dbg_builder = Scheduler(name='webkit_dbg_builder',
                                 branch='src',
                                 treeStableTimer=60,
                                 builderNames=['Webkit Builder (dbg)'])

s_webkit_dbg_builder_dependent = Dependent('webkit_dbg_dependent',
                                           s_webkit_dbg_builder,
                                           ['Webkit (dbg)(1)',
                                            'Webkit (dbg)(2)',
                                            'Webkit (dbg)(3)'])

# Scheduler to trigger slaves that depend on the webkit mac debug build.
s_webkit_dbg_mac_builder = Scheduler(name='webkit_dbg_mac_builder',
                                     branch='src',
                                     treeStableTimer=60,
                                     builderNames=['Webkit Mac Builder (dbg)'])

s_webkit_dbg_mac_builder_dependent = Dependent('webkit_dbg_mac_dependent',
                                               s_webkit_dbg_mac_builder,
                                               ['Webkit Mac10.5 (dbg)(1)',
                                                'Webkit Mac10.5 (dbg)(2)',
                                                'Webkit Mac10.5 (dbg)(3)'])

# Scheduler to trigger slaves that depend on the webkit linux debug build.
s_webkit_dbg_linux_builder = Scheduler(name='webkit_dbg_linux_builder',
                                       branch='src',
                                       treeStableTimer=60,
                                       builderNames=[
                                         'Webkit Linux Builder (dbg)'])

s_webkit_dbg_linux_builder_dependent = Dependent('webkit_dbg_linux_dependent',
                                                 s_webkit_dbg_linux_builder,
                                                 ['Webkit Linux (dbg)(1)',
                                                  'Webkit Linux (dbg)(2)',
                                                  'Webkit Linux (dbg)(3)'])

c['schedulers'] = [s_chromium,
                   s_chromium_reliability,
                   s_chromium_rel_builder,
                   s_chromium_rel_dependent,
                   s_chromium_rel_mac_builder,
                   s_chromium_rel_mac_dependent,
                   s_chromium_dbg_builder,
                   s_chromium_dbg_dependent,
                   s_chromium_dbg_mac_builder,
                   s_chromium_dbg_mac_dependent,
                   s_chromium_rel_linux_builder_64,
                   s_chromium_rel_linux_dependent_64,
                   s_chromium_dbg_linux_builder,
                   s_chromium_dbg_linux_dependent,
                   s_chromium_dbg_linux_shared_builder,
                   s_chromium_dbg_linux_shared_dependent,
                   s_webkit_rel_builder,
                   s_webkit_rel_builder_dependent,
                   s_webkit_rel_mac_builder,
                   s_webkit_rel_mac_builder_dependent,
                   s_webkit_dbg_builder,
                   s_webkit_dbg_builder_dependent,
                   s_webkit_dbg_mac_builder,
                   s_webkit_dbg_mac_builder_dependent,
                   s_webkit_dbg_linux_builder,
                   s_webkit_dbg_linux_builder_dependent]

####### BUILDERS

# buildbot/process/factory.py provides several BuildFactory classes you can
# start with, which implement build processes for common targets (GNU
# autoconf projects, CPAN perl modules, etc). The factory.BuildFactory is the
# base class, and is configured with a series of BuildSteps. When the build
# is run, the appropriate buildslave is told to execute each Step in turn.

# the first BuildStep is typically responsible for obtaining a copy of the
# sources. There are source-obtaining Steps in buildbot/process/step.py for
# CVS, SVN, and others.

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_win = chromium_factory.ChromiumFactory('src/build', 'win32')
m_webkit = chromium_factory.ChromiumFactory('src/webkit', 'win32')
m_linux = chromium_factory.ChromiumFactory('src/build', 'linux2')
m_mac = chromium_factory.ChromiumFactory('src/build', 'darwin')
m_sub = chromium_modules_factory.ChromiumSubmodulesFactory()
m_sub_mac = \
  chromium_modules_factory.ChromiumSubmodulesFactory(target_platform='darwin')
m_sub_linux = \
  chromium_modules_factory.ChromiumSubmodulesFactory(target_platform='linux2')
m_chromeos = chromium_factory.ChromiumFactory('src/build', 'linux2')

# Some shortcut to simplify the code below.
F_WIN = m_win.ChromiumFactory
F_WEBKIT = m_webkit.ChromiumFactory
F_LINUX = m_linux.ChromiumFactory
F_MAC = m_mac.ChromiumFactory
F_CR_OS = m_chromeos.ChromiumOSFactory

# URLs where the testers can find their build.
# NOTE: If you move a builder to another machine, you need to change these urls.
# TODO(nsylvain): Find a better way to express this.
def _GetArchiveUrl(machine_name, builder_name, zip_os_name):
  host = slaves.GetSlaveName('Chromium', machine_name)
  if not host:
    raise Exception("%s isn't reachable" % machine_name)
  return ('http://%s.jail.google.com/b/slave/%s/chrome_staging/'
          'full-build-%s.zip' % (
              slaves.GetSlaveName('Chromium', machine_name),
              builder_name, zip_os_name))

chromium_rel_archive = _GetArchiveUrl(
    'Chromium Builder',
    'chromium-rel-builder',
    'win32')
chromium_dbg_archive = _GetArchiveUrl(
    'Chromium Builder (dbg)',
    'chromium-dbg-builder',
    'win32')
chromium_rel_mac_archive = _GetArchiveUrl(
    'Chromium Mac Builder',
    'chromium-rel-mac-builder',
    'mac')
chromium_dbg_mac_archive = _GetArchiveUrl(
    'Chromium Mac Builder (dbg)',
    'chromium-dbg-mac-builder',
    'mac')
chromium_rel_linux_archive_64 = _GetArchiveUrl(
    'Chromium Linux Builder x64',
    'chromium-rel-linux-builder-64',
    'linux')
chromium_dbg_linux_archive = _GetArchiveUrl(
    'Chromium Linux Builder (dbg)',
    'chromium-dbg-linux-builder',
    'linux')
chromium_dbg_linux_shared_archive = _GetArchiveUrl(
    'Chromium Linux Builder (dbg-shlib)',
    'chromium-dbg-linux-shared-builder',
    'linux')
webkit_rel_archive = _GetArchiveUrl(
    'Webkit Builder',
    'webkit-rel-builder',
    'win32')
webkit_dbg_archive = _GetArchiveUrl(
    'Webkit Builder (dbg)',
    'webkit-dbg-builder',
    'win32')
webkit_rel_mac_archive = _GetArchiveUrl(
    'Webkit Mac Builder',
    'webkit-rel-mac-builder',
    'mac')
webkit_dbg_mac_archive = _GetArchiveUrl(
    'Webkit Mac Builder (dbg)',
    'webkit-dbg-mac-builder',
    'mac')
webkit_dbg_linux_archive = _GetArchiveUrl(
    'Webkit Linux Builder (dbg)',
    'webkit-dbg-linux-builder',
    'linux')

# For now we will assume a fixed toolchain location on the builders.
crosstool_prefix = (
    '/usr/local/crosstool-trusted/arm-2009q3/bin/arm-none-linux-gnueabi')
# Factory properties to use for an arm build.
arm_gclient_env = {
  'AR': crosstool_prefix + '-ar',
  'AS': crosstool_prefix + '-as',
  'CC': crosstool_prefix + '-gcc',
  'CXX': crosstool_prefix + '-g++',
  'LD': crosstool_prefix + '-ld',
  'RANLIB': crosstool_prefix + '-ranlib',
  'GYP_GENERATORS': 'make',
  'GYP_DEFINES': (
      'target_arch=arm '
      'sysroot=/usr/local/arm-rootfs '
      'disable_nacl=1 '
      'linux_use_tcmalloc=0 '
      'armv7=1 '
      'arm_thumb=1 '
      'arm_neon=0 '
      'arm_fpu=vfpv3-d16 '
      'chromeos=1 '  # Since this is the intersting variation.
  ),
}
arm_dbg_factory_properties = {
  'archive_build': False,
  'gclient_env': arm_gclient_env,
}
arm_rel_factory_properties = {
  'archive_build': True,
  'gclient_env': arm_gclient_env,
}

# The identifier of the factory is the build configuration. If two factories
# are using the same build configuration, they should have the same identifier.

# BuilderTesters using a custom build configuration.
f_cr_rel_full = F_WIN('chromium-rel-xp', clobber=True,
                      project='all.sln',
                      tests=['sizes', 'selenium', 'unit', 'ui', 'test_shell',
                             'memory', 'reliability', 'printing', 'remoting',
                             'dom_checker', 'check_deps', 'browser_tests',
                             'courgette', 'check_bins', 'webkit_unit',
                             'chrome_frame_unittests', 'gpu', 'installer'],
                      factory_properties={'archive_build': True,
                                          'extra_archive_paths': 'chrome_frame',
                                          'show_perf_results': True,
                                          'perf_id': 'chromium-rel-xp',
                                          'process_dumps': True,
                                          'start_crash_handler': True,
                                          'generate_gtest_json': True})

f_cr_reliability = m_linux.ReliabilityTestsFactory()

f_cr_rel_builder = F_WIN('chromium-rel', slave_type='Builder',
                         project='all.sln;chromium_builder')

f_cr_dbg_builder = F_WIN('chromium-dbg', target='Debug', slave_type='Builder',
                         project='all.sln;chromium_builder')

f_cr_rel_tests = F_WIN('chromium-rel', slave_type='Tester',
                       build_url=chromium_rel_archive,
                       tests=['unit', 'ui', 'media', 'printing', 'remoting',
                              'gpu', 'browser_tests', 'courgette', 'googleurl',
                              'installer'],
                       factory_properties={'process_dumps': True,
                                           'start_crash_handler': True,
                                           'generate_gtest_json': True})

f_cr_rel_nacl_tests = F_WIN('chromium-rel-nacl', slave_type='Tester',
                            build_url=chromium_rel_archive,
                            tests=['nacl_ui', 'nacl_sandbox'],
                            factory_properties={'process_dumps': True,
                                                'start_crash_handler': True,})

f_cr_rel_chromeframe_tests = F_WIN('chromium-rel-chromeframe',
                                   slave_type='Tester',
                                   build_url=chromium_rel_archive,
                                   tests=['chrome_frame'],
                                   factory_properties={
                                       'process_dumps': True,
                                       'start_crash_handler': True,})

f_cr_dbg_tests_1 = F_WIN('chromium-dbg', target='Debug', slave_type='Tester',
                         build_url=chromium_dbg_archive,
                         tests=['check_deps', 'googleurl', 'media', 'printing',
                                'remoting', 'courgette', 'unit', 'gpu',
                                'installer'],
                         factory_properties={'process_dumps': True,
                                             'start_crash_handler': True,
                                             'generate_gtest_json': True})

f_cr_dbg_tests_2 = F_WIN('chromium-dbg', target='Debug', slave_type='Tester',
                         build_url=chromium_dbg_archive,
                         tests=['ui'],
                         factory_properties={'ui_total_shards': 3,
                                             'ui_shard_index': 1,
                                             'process_dumps': True,
                                             'start_crash_handler': True,
                                             'generate_gtest_json': True})

f_cr_dbg_tests_3 = F_WIN('chromium-dbg', target='Debug', slave_type='Tester',
                         build_url=chromium_dbg_archive,
                         tests=['ui'],
                         factory_properties={'ui_total_shards': 3,
                                             'ui_shard_index': 2,
                                             'process_dumps': True,
                                             'start_crash_handler': True,
                                             'generate_gtest_json': True})

f_cr_dbg_tests_4 = F_WIN('chromium-dbg', target='Debug', slave_type='Tester',
                         build_url=chromium_dbg_archive,
                         tests=['ui', 'browser_tests'],
                         factory_properties={'ui_total_shards': 3,
                                             'ui_shard_index': 3,
                                             'process_dumps': True,
                                             'start_crash_handler': True,
                                             'generate_gtest_json': True})

f_cr_dbg_interactive_tests = F_WIN('chromium-dbg', target='Debug',
                                   slave_type='Tester',
                                   build_url=chromium_dbg_archive,
                                   tests=['interactive_ui'],
                                   factory_properties={
                                      'process_dumps': True,
                                      'start_crash_handler': True,
                                      'generate_gtest_json': True})

f_cr_dbg_perf =  F_WIN('chromium-dbg', target='Debug', slave_type='Tester',
                       build_url=chromium_dbg_archive,
                       tests=['plugin', 'page_cycler', 'startup'],
                       factory_properties={'process_dumps': True,
                                           'start_crash_handler': True,})

f_cr_dbg_perf_vista = F_WIN('chromium-dbg', target='Debug', slave_type='Tester',
                            build_url=chromium_dbg_archive,
                            tests=['page_cycler', 'startup'],
                            factory_properties={'process_dumps': True,
                                                'start_crash_handler': True,})

f_cr_rel_perf_xp_1 = F_WIN('chromium-rel', slave_type='Tester',
                           build_url=chromium_rel_archive,
                           tests=['page_cycler', 'dom_perf',
                                  'page_cycler_http'],
                           factory_properties={
                               'show_perf_results': True,
                               'expectations': True,
                               'perf_id': 'chromium-rel-xp-dual',
                               'process_dumps': True,
                               'start_crash_handler': True,})

f_cr_rel_perf_xp_2 = F_WIN('chromium-rel', slave_type='Tester',
                           build_url=chromium_rel_archive,
                           tests=['dromaeo', 'plugin'],
                           factory_properties={
                               'show_perf_results': True,
                               'expectations': True,
                               'perf_id': 'chromium-rel-xp-dual',
                               'process_dumps': True,
                               'start_crash_handler': True,})

f_cr_rel_perf_xp_int = F_WIN('chromium-rel', slave_type='Tester',
                             build_url=chromium_rel_archive,
                             tests=['memory', 'sunspider', 'v8_benchmark',
                                    'startup', 'tab_switching'],
                             factory_properties={
                                 'show_perf_results': True,
                                 'expectations': True,
                                 'perf_id': 'chromium-rel-xp-dual',
                                 'process_dumps': True,
                                 'start_crash_handler': True,})

# Why don't we run 'page_cycler_http' on vista?
f_cr_rel_perf_vista_1 = F_WIN('chromium-rel', slave_type='Tester',
                              build_url=chromium_rel_archive,
                              tests=['page_cycler', 'dom_perf'],
                              factory_properties={
                                  'show_perf_results': True,
                                  'expectations': True,
                                  'perf_id': 'chromium-rel-vista-dual',
                                  'process_dumps': True,
                                  'start_crash_handler': True,})

f_cr_rel_perf_vista_2 = F_WIN('chromium-rel', slave_type='Tester',
                              build_url=chromium_rel_archive,
                              tests=['dromaeo', 'plugin'],
                              factory_properties={
                                  'show_perf_results': True,
                                  'expectations': True,
                                  'perf_id': 'chromium-rel-vista-dual',
                                  'process_dumps': True,
                                  'start_crash_handler': True,})

f_cr_rel_perf_vista_int = F_WIN('chromium-rel', slave_type='Tester',
                                build_url=chromium_rel_archive,
                                tests=['memory', 'sunspider', 'v8_benchmark',
                                       'startup', 'tab_switching'],
                                factory_properties={
                                    'show_perf_results': True,
                                    'expectations': True,
                                    'perf_id': 'chromium-rel-vista-dual',
                                    'process_dumps': True,
                                    'start_crash_handler': True,})

f_webkit_rel_builder = F_WEBKIT('webkit-rel', slave_type='Builder')

f_webkit_dbg_builder = F_WEBKIT('webkit-dbg', target='Debug',
                                slave_type='Builder')

f_webkit_rel = F_WEBKIT('webkit-rel', slave_type='Tester',
                        build_url=webkit_rel_archive,
                        tests=['test_shell', 'webkit', 'webkit_unit'],
                        factory_properties={
                            'archive_webkit_results': True,
                            'process_dumps': True,
                            'test_results_server': 'test-results.appspot.com'})

f_webkit_dbg_1 = F_WEBKIT('webkit-dbg-1', target='Debug', slave_type='Tester',
                          build_url=webkit_dbg_archive,
                          tests=['test_shell', 'webkit', 'webkit_unit'],
                          factory_properties={
                              'archive_webkit_results': True,
                              'process_dumps': True,
                              'test_results_server': 'test-results.appspot.com',
                              'layout_part': '1:3'})

f_webkit_dbg_2 = F_WEBKIT('webkit-dbg-2', target='Debug', slave_type='Tester',
                          build_url=webkit_dbg_archive,
                          tests=['webkit'],
                          factory_properties={
                              'archive_webkit_results': True,
                              'process_dumps': True,
                              'test_results_server': 'test-results.appspot.com',
                              'layout_part': '2:3'})

f_webkit_dbg_3 = F_WEBKIT('webkit-dbg-3', target='Debug', slave_type='Tester',
                          build_url=webkit_dbg_archive,
                          tests=['webkit'],
                          factory_properties={
                              'archive_webkit_results': True,
                              'process_dumps': True,
                              'test_results_server': 'test-results.appspot.com',
                              'layout_part': '3:3'})

f_sub_rel = m_sub.SubmoduleFactory('sub-rel')
f_sub_dbg = m_sub.SubmoduleFactory('sub-deb', target='Debug')

f_cr_rel_arm = F_CR_OS('chromium-rel-arm', clobber=True,
    target='Release',
    tests=[],
    compile_timeout=3600,
    options=[
      '--build-tool=make',
      '--crosstool=' + crosstool_prefix,
      'chromeos_builder',
    ],
    factory_properties=arm_rel_factory_properties)

f_cr_dbg_arm = F_CR_OS('chromium-dbg-arm', clobber=True,
    target='Debug',
    tests=[],
    compile_timeout=14400,
    options=[
      '--build-tool=make',
      '--crosstool=' + crosstool_prefix,
      'chromeos_builder',
    ],
    factory_properties=arm_dbg_factory_properties)

f_cr_rel_linux = F_LINUX('chromium-rel-linux', clobber=True,
    tests=['unit', 'ui', 'dom_checker', 'googleurl', 'media', 'printing',
           'remoting', 'sizes', 'test_shell', 'memory', 'browser_tests',
           'webkit_unit', 'nacl_ui', 'nacl_sandbox', 'gpu', 'check_perms'],
    factory_properties={'archive_build': True,
                        'show_perf_results': True,
                        'perf_id': 'chromium-rel-linux',
                        'generate_gtest_json': True,})

f_cr_rel_linux_64 = F_LINUX('chromium-rel-linux-64', clobber=True,
    # TODO(mmoss) Add 'startup', 'page_cycler', 'page_cycler_http' when we have
    # dedicated hardware for the 64-bit perf tests.
    # TODO: Missing: 'dom_checker'
    # TODO: 'base', 'net' can probably come out since win doesn't, maybe add a
    # modules 64 to cover these?
    # TODO: googleurl doesn't run on the Chromium XP
    tests=['base', 'net', 'unit', 'ui', 'dom_checker', 'googleurl', 'media',
           'printing', 'remoting', 'sizes', 'test_shell', 'memory',
           'browser_tests', 'webkit_unit', 'gpu'],
    factory_properties={
        'archive_build': True,
        # TODO(mmoss) This is just for 'sizes' right now.
        'show_perf_results': True,
        'generate_gtest_json': True,
        'perf_id': 'chromium-rel-linux-64',
        'gclient_env': {'GYP_DEFINES':'target_arch=x64'}})

f_cr_rel_linux_builder_64 = F_LINUX(
    'chromium-rel-linux-64', target='Release',
    # Build just the stuff the testers run.
    # TODO(mmoss) This also builds some perf stuff, but the perf bots aren't
    # converted to Testers yet.
    options=['app_unittests', 'browser_tests', 'googleurl_unittests',
             'gpu_unittests', 'ipc_tests', 'media_unittests', 'memory_test',
             'page_cycler_tests', 'printing_unittests', 'remoting_unittests',
             'startup_tests', 'sync_unit_tests', 'ui_tests', 'unit_tests',
             'url_fetch_test',
            ],
    slave_type='Builder')

f_cr_rel_linux_tests_64_1 = F_LINUX(
    'chromium-rel-linux-64', target='Release',
    slave_type='Tester',
    build_url=chromium_rel_linux_archive_64,
    tests=['check_deps', 'googleurl', 'media', 'printing', 'remoting', 'ui',
           'browser_tests', 'unit', 'gpu'],
    )

f_cr_dbg_linux_builder = F_LINUX('chromium-dbg-linux', target='Debug',
                         # Build just the stuff the testers run, otherwise it
                         # tries to zip a bunch of huge, debug binaries, which
                         # takes forever and eventually fails because the
                         # zip file is too large.
                         options=['app_unittests', 'browser_tests',
                                  'googleurl_unittests', 'gpu_unittests',
                                  'interactive_ui_tests', 'ipc_tests',
                                  'media_unittests', 'nacl_ui_tests',
                                  'printing_unittests', 'remoting_unittests',
                                  'sync_unit_tests', 'ui_tests', 'unit_tests',
                                  'nacl_sandbox_tests'],
                         slave_type='Builder')

f_cr_dbg_linux_tests_1 = F_LINUX('chromium-dbg-linux', target='Debug',
                         slave_type='Tester',
                         build_url=chromium_dbg_linux_archive,
                         tests=['check_deps', 'googleurl', 'media', 'printing',
                                'remoting', 'ui', 'browser_tests'],
                         factory_properties={'ui_total_shards': 2,
                                             'ui_shard_index': 1,
                                             'generate_gtest_json': True})

f_cr_dbg_linux_tests_2 = F_LINUX('chromium-dbg-linux', target='Debug',
                         slave_type='Tester',
                         build_url=chromium_dbg_linux_archive,
                         tests=['unit', 'ui', 'nacl_ui', 'gpu',
                                'interactive_ui', 'nacl_sandbox'],
                         factory_properties={'ui_total_shards': 2,
                                             'ui_shard_index': 2,
                                             'generate_gtest_json': True})

f_cr_dbg_linux_shared_builder = F_LINUX(
    'chromium-dbg-linux-shared-builder',
    target='Debug',
    slave_type='Builder',
    options=['--build-tool=make'],
    # Move this back to a tester when we have a free VM available.
    tests=['base', 'browser_tests', 'check_deps', 'googleurl', 'media', 'net',
           'printing', 'remoting', 'sizes', 'test_shell', 'ui', 'unit'],
    factory_properties={
        'gclient_env': {'GYP_DEFINES':'library=shared_library'}})

f_cr_rel_linux_hardy_1 = F_LINUX('chromium-rel-linux-hardy',
                                 tests=['page_cycler', 'startup',
                                        'page_cycler_http'],
                                 options=['startup_tests', 'page_cycler_tests'],
                                 factory_properties={
                                     'show_perf_results': True,
                                     'expectations': True,
                                     'perf_id': 'chromium-rel-linux-hardy'})

f_cr_rel_linux_hardy_2 = F_LINUX('chromium-rel-linux-hardy',
                                 tests=['dom_perf', 'memory', 'sunspider',
                                        'v8_benchmark', 'dromaeo', 'plugin'],
                                 options=['memory_test', 'ui_tests',
                                          'url_fetch_test', 'plugin_tests'],
                                 factory_properties={
                                     'show_perf_results': True,
                                     'expectations': True,
                                     'perf_id': 'chromium-rel-linux-hardy'})

f_sub_rel_linux = m_sub_linux.SubmoduleFactory('sub-rel-linux')
f_sub_dbg_linux = m_sub_linux.SubmoduleFactory('sub-dbg-linux', target='Debug')

f_webkit_rel_linux = F_LINUX('webkit-rel-linux',
    tests=['webkit', 'test_shell', 'webkit_unit'],
    options=['test_shell', 'test_shell_tests', 'webkit_unit_tests'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com'})

f_webkit_dbg_linux_builder = F_LINUX('webkit-dbg-linux', target='Debug',
                               slave_type='Builder',
                               options=['test_shell', 'test_shell_tests',
                                        'webkit_unit_tests'])

f_webkit_dbg_linux_1 = F_LINUX('webkit-dbg-linux-1',
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_linux_archive,
    tests=['webkit', 'test_shell', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'layout_part': '1:3'})

f_webkit_dbg_linux_2 = F_LINUX('webkit-dbg-linux-2',
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_linux_archive,
    tests=['webkit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'layout_part': '2:3'})

f_webkit_dbg_linux_3 = F_LINUX('webkit-dbg-linux-3',
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_linux_archive,
    tests=['webkit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'layout_part': '3:3'})

# BuilderTesters using a custom build configuration.

# TODO: Win Full also runs: 'selenium', 'reliability'
f_cr_rel_mac_full = F_MAC(
    'chromium-rel-mac', clobber=True,
    tests=['sizes', 'unit', 'ui', 'dom_checker', 'test_shell', 'memory',
           'printing', 'remoting', 'browser_tests', 'webkit_unit', 'gpu'],
    factory_properties={'archive_build': True,
                        'show_perf_results': True,
                        'perf_id': 'chromium-rel-mac',
                        'generate_gtest_json': True})

f_cr_rel_mac_builder = F_MAC('chromium-rel-mac', slave_type='Builder',
                             options=['--', '-target', 'chromium_builder_rel'])

f_cr_dbg_mac_builder = F_MAC('chromium-dbg-mac', slave_type='Builder',
                             target='Debug',
                             options=['--', '-target', 'chromium_builder_dbg'])

f_cr_rel_mac_tests = F_MAC('chromium-rel-mac', slave_type='Tester',
                           build_url=chromium_rel_mac_archive,
                           tests=['unit', 'ui', 'media', 'printing', 'remoting',
                                  'gpu', 'browser_tests', 'googleurl',
                                  'nacl_ui', 'nacl_sandbox'],
                           factory_properties={'generate_gtest_json': True})

f_cr_dbg_mac_tests_1 = F_MAC('chromium-dbg-mac', slave_type='Tester',
                             target='Debug',
                             build_url=chromium_dbg_mac_archive,
                             tests=['check_deps', 'media', 'printing',
                                    'remoting', 'unit', 'googleurl', 'nacl_ui',
                                    'gpu', 'interactive_ui',
                                    'nacl_sandbox'],
                             factory_properties={'generate_gtest_json': True})

f_cr_dbg_mac_tests_2 = F_MAC('chromium-dbg-mac', slave_type='Tester',
                             target='Debug',
                             build_url=chromium_dbg_mac_archive,
                             tests=['ui'],
                             factory_properties={'generate_gtest_json': True})

f_cr_dbg_mac_tests_3 = F_MAC('chromium-dbg-mac', slave_type='Tester',
                             target='Debug',
                             build_url=chromium_dbg_mac_archive,
                             tests=['browser_tests'],
                             factory_properties={'generate_gtest_json': True})

# Helper since the 10.5 vs 10.6 differences are just for ids.
def RelMacPerfTester(bot_and_perf_id, tests):
   return F_MAC(bot_and_perf_id, slave_type='Tester',
                build_url=chromium_rel_mac_archive,
                tests=tests,
                factory_properties={'show_perf_results': True,
                                    'expectations': True,
                                    'perf_id': bot_and_perf_id})

# TODO: XP/Vista Perf also runs: 'reliability', 'dom_checker'
# Tests are split across machines to get all the perf data as quickly as
# possible.
f_cr_rel_mac5_perf_1 = RelMacPerfTester('chromium-rel-mac5',
                                        ['page_cycler', 'page_cycler_http'])

f_cr_rel_mac5_perf_2 = RelMacPerfTester('chromium-rel-mac5',
                                        ['startup', 'tab_switching', 'memory',
                                         'v8_benchmark', 'sunspider',
                                         'dom_perf'])

f_cr_rel_mac5_perf_3 = RelMacPerfTester('chromium-rel-mac5',
                                        ['dromaeo', 'plugin'])

# Same setup as 10.5, just using 10.6 naming.
f_cr_rel_mac6_perf_1 = RelMacPerfTester('chromium-rel-mac6',
                                        ['page_cycler', 'page_cycler_http'])

f_cr_rel_mac6_perf_2 = RelMacPerfTester('chromium-rel-mac6',
                                        ['startup', 'tab_switching', 'memory',
                                         'v8_benchmark', 'sunspider',
                                         'dom_perf'])

f_cr_rel_mac6_perf_3 = RelMacPerfTester('chromium-rel-mac6',
                                        ['dromaeo', 'plugin'])

f_cr_dbg_linux_views = F_CR_OS('chromium-dbg-linux-views',
    target='Debug',
    tests=['unit', 'base', 'net', 'googleurl', 'media', 'ui', 'printing',
           'remoting', 'browser_tests', 'interactive_ui',
          ],
    options=['app_unittests', 'base_unittests', 'browser_tests',
             'interactive_ui_tests', 'ipc_tests', 'googleurl_unittests',
             'media_unittests', 'net_unittests', 'printing_unittests',
             'remoting_unittests', 'sync_unit_tests', 'ui_tests', 'unit_tests',
            ],
    factory_properties={'gclient_env': { 'GYP_DEFINES':'toolkit_views=1'},
                        'generate_gtest_json': True})

f_cr_rel_linux_chromeos = F_CR_OS('chromium-rel-linux-chromiumos',
    tests=['unit', 'base', 'net', 'googleurl', 'media', 'ui', 'printing',
           'remoting', 'browser_tests', 'interactive_ui',
           ],
    options=['chromeos_builder'],
    factory_properties={
        'archive_build': True,
        'extra_archive_paths': 'chrome/tools/build/chromeos',
        'gclient_env': { 'GYP_DEFINES':'chromeos=1'},
        'generate_gtest_json': True})

f_cr_dbg_linux_chromeos = F_CR_OS('chromium-dbg-linux-chromiumos',
    target='Debug',
    tests=['unit', 'base', 'net', 'googleurl', 'media', 'ui', 'printing',
           'remoting', 'browser_tests', 'interactive_ui',
           ],
    options=['chromeos_builder'],
    factory_properties={
        'gclient_env': { 'GYP_DEFINES':'chromeos=1'},
        'generate_gtest_json': True})

f_sub_rel_mac = m_sub_mac.SubmoduleFactory('sub-rel-mac',
        factory_properties={'generate_gtest_json': True})
f_sub_dbg_mac = m_sub_mac.SubmoduleFactory('sub-dbg-mac', target='Debug',
        factory_properties={'generate_gtest_json': True})

f_webkit_rel_mac_builder = F_MAC(
    'webkit-rel-mac',
    slave_type='Builder',
    options=['--', '-project',
             '../webkit/webkit.xcodeproj'])

f_webkit_dbg_mac_builder = F_MAC(
    'webkit-dbg-mac',
    slave_type='Builder',
    target='Debug',
    options=['--', '-project',
             '../webkit/webkit.xcodeproj'])

f_webkit_rel_mac = F_MAC(
    'webkit-rel-mac5',
    slave_type='Tester',
    build_url=webkit_rel_mac_archive,
    tests=['test_shell', 'webkit', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com'})

f_webkit_dbg_mac_1 = F_MAC(
    'webkit-dbg-mac5-1',
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_mac_archive,
    tests=['webkit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                       'layout_part': '1:3'})

f_webkit_dbg_mac_2 = F_MAC(
    'webkit-dbg-mac5-2',
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_mac_archive,
    tests=['webkit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'layout_part': '2:3'})

f_webkit_dbg_mac_3 = F_MAC(
    'webkit-dbg-mac5-3',
    target='Debug',
    slave_type='Tester',
    build_url=webkit_dbg_mac_archive,
    tests=['test_shell', 'webkit', 'webkit_unit'],
    factory_properties={'archive_webkit_results': True,
                        'test_results_server': 'test-results.appspot.com',
                        'layout_part': '3:3'})

# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

# The 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds
#  category (optional): it is not used in the normal 'buildbot' meaning. It is
#                       used by gatekeeper to determine which steps it should
#                       look for to close the tree.
#

b_chromium_rel_xp_full = {'name': 'Chromium XP',
  'builddir': 'chromium-rel-xp',
  'factory': f_cr_rel_full,
  'category': '1release full|builders_compile|builders_windows',
}

b_chromium_reliability = {'name': 'Chromium Reliability',
  'builddir': 'chromium-reliability',
  'factory': f_cr_reliability,
  'category': '1release full',
}

b_chromium_dbg_builder = {'name': 'Chromium Builder (dbg)',
  'builddir': 'chromium-dbg-builder',
  'factory': f_cr_dbg_builder,
  'category': '2windows|builders_compile|builders_windows',
}

b_chromium_rel_builder = {'name': 'Chromium Builder',
  'builddir': 'chromium-rel-builder',
  'factory': f_cr_rel_builder,
  'category': '2windows|builders_compile|builders_windows',
}

b_chromium_rel_xp_tests = {'name': 'XP Tests',
  'builddir': 'chromium-rel-xp-tests',
  'factory': f_cr_rel_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_nacl_tests = {'name': 'NACL Tests',
  'builddir': 'chromium-rel-nacl-tests',
  'factory': f_cr_rel_nacl_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_nacl_tests_64 = {'name': 'NACL Tests (x64)',
  'builddir': 'chromium-rel-nacl-tests-64',
  'factory': f_cr_rel_nacl_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_chromeframe_tests_ie6 = {'name': 'Chrome Frame Tests (ie6)',
  'factory': f_cr_rel_chromeframe_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_chromeframe_tests_ie7 = {'name': 'Chrome Frame Tests (ie7)',
  'builddir': 'chromium-rel-chromeframe-tests',
  'factory': f_cr_rel_chromeframe_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_chromeframe_tests_ie8 = {'name': 'Chrome Frame Tests (ie8)',
  'factory': f_cr_rel_chromeframe_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_xp_tests_1 = {'name': 'XP Tests (dbg)(1)',
  'builddir': 'chromium-dbg-xp-tests',
  'factory': f_cr_dbg_tests_1,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_xp_tests_2 = {'name': 'XP Tests (dbg)(2)',
  'builddir': 'chromium-dbg-xp-tests-2',
  'factory': f_cr_dbg_tests_2,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_xp_tests_3 = {'name': 'XP Tests (dbg)(3)',
  'builddir': 'chromium-dbg-xp-tests-3',
  'factory': f_cr_dbg_tests_3,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_xp_tests_4 = {'name': 'XP Tests (dbg)(4)',
  'builddir': 'chromium-dbg-xp-tests-4',
  'factory': f_cr_dbg_tests_4,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_xp_interactive_tests = {'name': 'Interactive Tests (dbg)',
  'builddir': 'chromium-dbg-xp-interactive',
  'factory': f_cr_dbg_interactive_tests,
  'category': '2windows|builder_testers|builders_windows',
  }

b_chromium_rel_vista_tests = {'name': 'Vista Tests',
  'builddir': 'chromium-rel-vista-tests',
  'factory': f_cr_rel_tests,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_vista_tests_1 = {'name': 'Vista Tests (dbg)(1)',
  'builddir': 'chromium-dbg-vista-tests',
  'factory': f_cr_dbg_tests_1,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_vista_tests_2 = {'name': 'Vista Tests (dbg)(2)',
  'builddir': 'chromium-dbg-vista-tests-2',
  'factory': f_cr_dbg_tests_2,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_vista_tests_3 = {'name': 'Vista Tests (dbg)(3)',
  'builddir': 'chromium-dbg-vista-tests-3',
  'factory': f_cr_dbg_tests_3,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_vista_tests_4 = {'name': 'Vista Tests (dbg)(4)',
  'builddir': 'chromium-dbg-vista-tests-4',
  'factory': f_cr_dbg_tests_4,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_xp_perf = {'name': 'XP Perf (dbg)',
  'builddir': 'chromium-dbg-xp-perf',
  'factory': f_cr_dbg_perf,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_dbg_vista_perf = {'name': 'Vista Perf (dbg)',
  'builddir': 'chromium-dbg-vista-perf',
  'factory': f_cr_dbg_perf_vista,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_xp_perf_1 = {'name': 'XP Perf (1)',
  'builddir': 'chromium-rel-xp-perf-1',
  'factory': f_cr_rel_perf_xp_1,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_xp_perf_2 = {'name': 'XP Perf (2)',
  'builddir': 'chromium-rel-xp-perf-2',
  'factory': f_cr_rel_perf_xp_2,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_xp_interactive_perf = {'name': 'XP Interactive Perf',
  'builddir': 'chromium-rel-xp-int-perf',
  'factory': f_cr_rel_perf_xp_int,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_vista_perf_1 = {'name': 'Vista Perf (1)',
  'builddir': 'chromium-rel-vista-perf-1',
  'factory': f_cr_rel_perf_vista_1,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_vista_perf_2 = {'name': 'Vista Perf (2)',
  'builddir': 'chromium-rel-vista-perf-2',
  'factory': f_cr_rel_perf_vista_2,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_vista_perf_int = {'name': 'Vista Interactive Perf',
  'builddir': 'chromium-rel-vista-perf-int',
  'factory': f_cr_rel_perf_vista_int,
  'category': '2windows|builder_testers|builders_windows',
}

b_chromium_rel_arm = {'name': 'Chromium Arm',
  'builddir': 'chromium-rel-arm',
  'factory': f_cr_rel_arm,
  'category': '1release full|builders_compile|builder_testers',
}

b_chromium_rel_linux = {'name': 'Chromium Linux',
  'builddir': 'chromium-rel-linux',
  'factory': f_cr_rel_linux,
  'category': '1release full|builders_compile|builder_testers',
}

b_chromium_rel_linux_64 = {'name': 'Chromium Linux x64',
  'builddir': 'chromium-rel-linux-64',
  'factory': f_cr_rel_linux_64,
  'category': '1release full|builders_compile|builder_testers',
}

b_chromium_rel_linux_builder_64 = {'name': 'Chromium Linux Builder x64',
  'builddir': 'chromium-rel-linux-builder-64',
  'factory': f_cr_rel_linux_builder_64,
  'category': '4linux|builders_compile',
}

b_chromium_dbg_linux_builder = {'name': 'Chromium Linux Builder (dbg)',
  'builddir': 'chromium-dbg-linux-builder',
  'factory': f_cr_dbg_linux_builder,
  'category': '4linux|builders_compile',
}

b_chromium_dbg_arm = {'name': 'Chromium Arm (dbg)',
  'builddir': 'chromium-dbg-arm-builder',
  'factory': f_cr_dbg_arm,
  'category': '4linux|builders_compile',
}

b_chromium_rel_linux_tests_64_1 = {'name': 'Linux Tests x64',
  'builddir': 'chromium-rel-linux-tests-64-1',
  'factory': f_cr_rel_linux_tests_64_1,
  'category': '4linux|builder_testers',
}

b_chromium_dbg_linux_tests_1 = {'name': 'Linux Tests (dbg)(1)',
  'builddir': 'chromium-dbg-linux-tests-1',
  'factory': f_cr_dbg_linux_tests_1,
  'category': '4linux|builder_testers',
}

b_chromium_dbg_linux_tests_2 = {'name': 'Linux Tests (dbg)(2)',
  'builddir': 'chromium-dbg-linux-tests-2',
  'factory': f_cr_dbg_linux_tests_2,
  'category': '4linux|builder_testers',
}

b_chromium_dbg_linux_shared_builder = {
  'name': 'Chromium Linux Builder (dbg-shlib)',
  'builddir': 'chromium-dbg-linux-shared-builder',
  'factory': f_cr_dbg_linux_shared_builder,
  'category': '4linux|builders_compile|builder_testers',
}

b_chromium_rel_linux_hardy_1 = {'name': 'Linux Perf (1)',
  'builddir': 'chromium-rel-linux-hardy',
  'factory': f_cr_rel_linux_hardy_1,
  'category': '4linux|builders_compile|builder_testers',
}

b_chromium_rel_linux_hardy_2 = {'name': 'Linux Perf (2)',
  'builddir': 'chromium-rel-linux-hardy-2',
  'factory': f_cr_rel_linux_hardy_2,
  'category': '4linux|builders_compile|builder_testers',
}

b_webkit_rel_builder = {'name': 'Webkit Builder',
  'builddir': 'webkit-rel-builder',
  'factory': f_webkit_rel_builder,
  'category': '2windows|builders_compile|builders_windows',
}

b_webkit_dbg_builder = {'name': 'Webkit Builder (dbg)',
  'builddir': 'webkit-dbg-builder',
  'factory': f_webkit_dbg_builder,
  'category': '2windows|builders_compile|builders_windows',
}

b_webkit_rel = {'name': 'Webkit',
  'builddir': 'webkit-rel',
  'factory': f_webkit_rel,
  'category': '2windows|builder_testers|builders_windows',
}

b_webkit_dbg_1 = {'name': 'Webkit (dbg)(1)',
  'builddir': 'webkit-dbg-1',
  'factory': f_webkit_dbg_1,
  'category': '2windows|builder_testers|builders_windows',
}

b_webkit_dbg_2 = {'name': 'Webkit (dbg)(2)',
  'builddir': 'webkit-dbg-2',
  'factory': f_webkit_dbg_2,
  'category': '2windows|builder_testers|builders_windows',
}

b_webkit_dbg_3 = {'name': 'Webkit (dbg)(3)',
  'builddir': 'webkit-dbg-3',
  'factory': f_webkit_dbg_3,
  'category': '2windows|builder_testers|builders_windows',
}

b_sub_dbg_xp = {'name': 'Modules XP (dbg)',
  'builddir': 'sub-dbg-xp',
  'factory': f_sub_dbg,
  'category': '2windows|builders_compile|builder_testers|builders_windows',
}

b_sub_rel_xp = {'name': 'Modules XP',
  'builddir': 'sub-rel-xp',
  'factory': f_sub_rel,
  'category': '2windows|builders_compile|builder_testers|builders_windows',
}

b_sub_dbg_vista = {'name': 'Modules Vista (dbg)',
  'builddir': 'sub-dbg-vista',
  'factory': f_sub_dbg,
  'category': '2windows|builders_compile|builder_testers|builders_windows',
}

b_sub_rel_vista = {'name': 'Modules Vista',
  'builddir': 'sub-rel-vista',
  'factory': f_sub_rel,
  'category': '2windows|builders_compile|builder_testers|builders_windows',
}

b_sub_dbg_linux = {'name': 'Modules Linux (dbg)',
  'builddir': 'sub-dbg-linux',
  'factory': f_sub_dbg_linux,
  'category': '4linux|builders_compile|builder_testers',
}

b_sub_rel_linux = {'name': 'Modules Linux',
  'builddir': 'sub-rel-linux',
  'factory': f_sub_rel_linux,
  'category': '4linux|builders_compile|builder_testers',
}

b_webkit_rel_linux = {'name': 'Webkit Linux',
  'builddir': 'webkit-rel-linux',
  'factory': f_webkit_rel_linux,
  'category': '4linux|builders_compile|builder_testers',
}

b_webkit_dbg_linux_builder = {'name': 'Webkit Linux Builder (dbg)',
  'builddir': 'webkit-dbg-linux-builder',
  'factory': f_webkit_dbg_linux_builder,
  'category': '4linux|builders_compile',
}

b_webkit_dbg_linux_1 = {'name': 'Webkit Linux (dbg)(1)',
  'builddir': 'webkit-dbg-linux-1',
  'factory': f_webkit_dbg_linux_1,
  'category': '4linux|builder_testers',
}

b_webkit_dbg_linux_2 = {'name': 'Webkit Linux (dbg)(2)',
  'builddir': 'webkit-dbg-linux-2',
  'factory': f_webkit_dbg_linux_2,
  'category': '4linux|builder_testers',
}

b_webkit_dbg_linux_3 = {'name': 'Webkit Linux (dbg)(3)',
  'builddir': 'webkit-dbg-linux-3',
  'factory': f_webkit_dbg_linux_3,
  'category': '4linux|builder_testers',
}

b_chromium_rel_mac_full = {'name': 'Chromium Mac',
  'builddir': 'chromium-rel-mac',
  'factory': f_cr_rel_mac_full,
  'category': '1release full|builders_compile|builder_testers',
}

b_chromium_rel_mac_builder = {'name': 'Chromium Mac Builder',
  'builddir': 'chromium-rel-mac-builder',
  'factory': f_cr_rel_mac_builder,
  'category': '3mac|builders_compile',
}

b_chromium_dbg_mac_builder = {'name': 'Chromium Mac Builder (dbg)',
  'builddir': 'chromium-dbg-mac-builder',
  'factory': f_cr_dbg_mac_builder,
  'category': '3mac|builders_compile',
}

b_chromium_rel_mac5_tests = {'name': 'Mac10.5 Tests',
  'builddir': 'chromium-rel-mac5-tests',
  'factory': f_cr_rel_mac_tests,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_mac5_tests_1 = {'name': 'Mac10.5 Tests (dbg)(1)',
  'builddir': 'chromium-dbg-mac5-tests',
  'factory': f_cr_dbg_mac_tests_1,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_mac5_tests_2 = {'name': 'Mac10.5 Tests (dbg)(2)',
  'builddir': 'chromium-dbg-mac5-tests-2',
  'factory': f_cr_dbg_mac_tests_2,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_mac5_tests_3 = {'name': 'Mac10.5 Tests (dbg)(3)',
  'builddir': 'chromium-dbg-mac5-tests-3',
  'factory': f_cr_dbg_mac_tests_3,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac6_tests = {'name': 'Mac10.6 Tests',
  'builddir': 'chromium-rel-mac6-tests',
  'factory': f_cr_rel_mac_tests,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_mac6_tests_1 = {'name': 'Mac10.6 Tests (dbg)(1)',
  'builddir': 'chromium-dbg-mac6-tests',
  'factory': f_cr_dbg_mac_tests_1,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_mac6_tests_2 = {'name': 'Mac10.6 Tests (dbg)(2)',
  'builddir': 'chromium-dbg-mac6-tests-2',
  'factory': f_cr_dbg_mac_tests_2,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_mac6_tests_3 = {'name': 'Mac10.6 Tests (dbg)(3)',
  'builddir': 'chromium-dbg-mac6-tests-3',
  'factory': f_cr_dbg_mac_tests_3,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac5_perf_1 = {'name': 'Mac10.5 Perf(1)',
  'builddir': 'chromium-rel-mac5-perf',
  'factory': f_cr_rel_mac5_perf_1,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac5_perf_2 = {'name': 'Mac10.5 Perf(2)',
  'builddir': 'chromium-rel-mac5-perf-2',
  'factory': f_cr_rel_mac5_perf_2,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac5_perf_3 = {'name': 'Mac10.5 Perf(3)',
  'builddir': 'chromium-rel-mac5-perf-3',
  'factory': f_cr_rel_mac5_perf_3,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac6_perf_1 = {'name': 'Mac10.6 Perf(1)',
  'builddir': 'chromium-rel-mac6-perf',
  'factory': f_cr_rel_mac6_perf_1,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac6_perf_2 = {'name': 'Mac10.6 Perf(2)',
  'builddir': 'chromium-rel-mac6-perf-2',
  'factory': f_cr_rel_mac6_perf_2,
  'category': '3mac|builder_testers',
}

b_chromium_rel_mac6_perf_3 = {'name': 'Mac10.6 Perf(3)',
  'builddir': 'chromium-rel-mac6-perf-3',
  'factory': f_cr_rel_mac6_perf_3,
  'category': '3mac|builder_testers',
}

b_sub_rel_mac5 = {'name': 'Modules Mac10.5',
  'builddir': 'sub-rel-mac5',
  'factory': f_sub_rel_mac,
  'category': '3mac|builders_compile|builder_testers',
}

b_sub_dbg_mac5 = {'name': 'Modules Mac10.5 (dbg)',
  'builddir': 'sub-dbg-mac5',
  'factory': f_sub_dbg_mac,
  'category': '3mac|builders_compile|builder_testers',
}

b_sub_rel_mac6 = {'name': 'Modules Mac10.6',
  'builddir': 'sub-rel-mac6',
  'factory': f_sub_rel_mac,
  'category': '3mac|builders_compile|builder_testers',
}

b_sub_dbg_mac6 = {'name': 'Modules Mac10.6 (dbg)',
  'builddir': 'sub-dbg-mac6',
  'factory': f_sub_dbg_mac,
  'category': '3mac|builders_compile|builder_testers',
}

b_webkit_rel_mac_builder = {'name': 'Webkit Mac Builder',
  'builddir': 'webkit-rel-mac-builder',
  'factory': f_webkit_rel_mac_builder,
  'category': '3mac|builders_compile',
}

b_webkit_dbg_mac_builder = {'name': 'Webkit Mac Builder (dbg)',
  'builddir': 'webkit-dbg-mac-builder',
  'factory': f_webkit_dbg_mac_builder,
  'category': '3mac|builder_testers',
}

b_webkit_rel_mac5 = {'name': 'Webkit Mac10.5',
  'builddir': 'webkit-rel-mac5',
  'factory': f_webkit_rel_mac,
  'category': '3mac|builder_testers',
}

b_webkit_dbg_mac5_1 = {'name': 'Webkit Mac10.5 (dbg)(1)',
  'builddir': 'webkit-dbg-mac5-1',
  'factory': f_webkit_dbg_mac_1,
  'category': '3mac|builder_testers',
}

b_webkit_dbg_mac5_2 = {'name': 'Webkit Mac10.5 (dbg)(2)',
  'builddir': 'webkit-dbg-mac5-2',
  'factory': f_webkit_dbg_mac_2,
  'category': '3mac|builder_testers',
}

b_webkit_dbg_mac5_3 = {'name': 'Webkit Mac10.5 (dbg)(3)',
  'builddir': 'webkit-dbg-mac5-3',
  'factory': f_webkit_dbg_mac_3,
  'category': '3mac|builder_testers',
}

b_chromium_dbg_linux_views = {'name': 'Linux Builder (Views dbg)',
  'builddir': 'chromium-dbg-linux-views',
  'factory': f_cr_dbg_linux_views,
  'category': '4linux|builders_compile',
}

b_chromium_rel_linux_chromeos = {'name': 'Linux Builder (ChromiumOS)',
  'builddir': 'chromium-rel-linux-chromiumos',
  'factory': f_cr_rel_linux_chromeos,
  'category': '4linux|builders_compile',
}

b_chromium_dbg_linux_chromeos = {'name': 'Linux Builder (ChromiumOS dbg)',
  'builddir': 'chromium-dbg-linux-chromiumos',
  'factory': f_cr_dbg_linux_chromeos,
  'category': '4linux|builders_compile',
}

c['builders'] = [
  b_chromium_rel_xp_full,
  b_chromium_rel_mac_full,
  b_chromium_rel_arm,
  b_chromium_rel_linux,
  b_chromium_rel_linux_64,
  b_chromium_reliability,
  b_chromium_rel_builder,
  b_chromium_dbg_builder,
  b_chromium_rel_xp_tests,
  b_chromium_rel_vista_tests,
  b_chromium_rel_nacl_tests,
  b_chromium_rel_nacl_tests_64,
  b_chromium_rel_chromeframe_tests_ie6,
  b_chromium_rel_chromeframe_tests_ie7,
  b_chromium_rel_chromeframe_tests_ie8,
  b_chromium_dbg_xp_tests_1,
  b_chromium_dbg_xp_tests_2,
  b_chromium_dbg_xp_tests_3,
  b_chromium_dbg_xp_tests_4,
  b_chromium_dbg_xp_interactive_tests,
  b_chromium_dbg_xp_perf,
  b_chromium_rel_xp_perf_1,
  b_chromium_rel_xp_perf_2,
  b_chromium_rel_xp_interactive_perf,
  b_chromium_dbg_vista_tests_1,
  b_chromium_dbg_vista_tests_2,
  b_chromium_dbg_vista_tests_3,
  b_chromium_dbg_vista_tests_4,
  b_chromium_dbg_vista_perf,
  b_chromium_rel_vista_perf_1,
  b_chromium_rel_vista_perf_2,
  b_chromium_rel_vista_perf_int,
  b_chromium_dbg_arm,
  b_chromium_rel_linux_builder_64,
  b_chromium_dbg_linux_builder,
  b_chromium_rel_linux_hardy_1,
  b_chromium_rel_linux_hardy_2,
  b_chromium_rel_linux_tests_64_1,
  b_chromium_dbg_linux_tests_1,
  b_chromium_dbg_linux_tests_2,
  b_chromium_dbg_linux_shared_builder,
  b_chromium_rel_mac_builder,
  b_chromium_dbg_mac_builder,
  b_chromium_rel_mac5_tests,
  b_chromium_dbg_mac5_tests_1,
  b_chromium_dbg_mac5_tests_2,
  b_chromium_dbg_mac5_tests_3,
  b_chromium_rel_mac6_tests,
  b_chromium_dbg_mac6_tests_1,
  b_chromium_dbg_mac6_tests_2,
  b_chromium_dbg_mac6_tests_3,
  b_chromium_rel_mac5_perf_1,
  b_chromium_rel_mac5_perf_2,
  b_chromium_rel_mac5_perf_3,
  b_chromium_rel_mac6_perf_1,
  b_chromium_rel_mac6_perf_2,
  b_chromium_rel_mac6_perf_3,
  b_webkit_rel_builder,
  b_webkit_dbg_builder,
  b_webkit_rel,
  b_webkit_dbg_1,
  b_webkit_dbg_2,
  b_webkit_dbg_3,
  b_webkit_rel_linux,
  b_webkit_dbg_linux_builder,
  b_webkit_dbg_linux_1,
  b_webkit_dbg_linux_2,
  b_webkit_dbg_linux_3,
  b_webkit_rel_mac_builder,
  b_webkit_dbg_mac_builder,
  b_webkit_rel_mac5,
  b_webkit_dbg_mac5_1,
  b_webkit_dbg_mac5_2,
  b_webkit_dbg_mac5_3,
  b_sub_rel_xp,
  b_sub_dbg_xp,
  b_sub_rel_vista,
  b_sub_dbg_vista,
  b_sub_rel_linux,
  b_sub_dbg_linux,
  b_sub_rel_mac5,
  b_sub_dbg_mac5,
  b_sub_rel_mac6,
  b_sub_dbg_mac6,
  b_chromium_dbg_linux_views,
  b_chromium_rel_linux_chromeos,
  b_chromium_dbg_linux_chromeos,
]


####### BUILDSLAVES

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())
master_utils.VerifySetup(c, slaves)


####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster)

# Add more.

if TREE_GATE_KEEPER:
  import gatekeeper
  # This is the list of the builder categories and the corresponding critical
  # steps. If one critical step fails, gatekeeper will close the tree
  # automatically.
  # Note: don't include 'update scripts' since we can't do much about it when
  # it's failing and the tree is still technically fine.
  categories_steps = {
    '': ['update'],
    'builder_testers': [
      'Start Crash Handler',
      #'reliability: complete result of previous build',
      #'reliability: partial result of current build',
      'sizes',

      # Unit tests
      #'app_unittests',
      'base_unittests',
      #'browser_tests',
      'courgette_unittests',
      'googleurl_unittests',
      #'interactive_ui_tests',
      'ipc_tests',
      'installer_util_unittests',
      'media_unittests',
      'mini_installer_test',
      'net_unittests',
      'plugin_tests',
      'printing_unittests',
      'remoting_unittests',
      'sbox_unittests',
      'sbox_integration_tests',
      'sbox_validation_tests',
      'selenium_tests',
      'test_shell_tests',
      'unit_tests',
      #'ui_tests',
      #'webkit_tests',

      # Perf tests
      # TODO(maruel): Wait until http://crbug.com/18597 is closed and verified
      # to be stable.
      #'dom_perf',
      #'memory_test',
      #'new_tab_ui_cold_test',
      #'new_tab_ui_warm_test',
      #'page_cycler_bloat-http',
      #'page_cycler_dhtml',
      #'page_cycler_intl1',
      #'page_cycler_intl2',
      #'page_cycler_morejs',
      #'page_cycler_moz',
      #'page_cycler_moz-http',
      #'startup_test',
      #'tab_switching_test',
     ],
    'builders_windows': ['svnkill', 'taskkill'],
    'builders_compile': ['check deps', 'compile', 'archived build']
  }
  exclusions = {
      'Chromium Arm': None,
      'Chromium Arm (dbg)': None,
  }
  forgiving_steps = ['update scripts', 'update', 'svnkill', 'taskkill',
                     'archived build', 'Start Crash Handler']
  c['status'].append(gatekeeper.GateKeeper(
      fromaddr=ActiveMaster.from_address,
      categories_steps=categories_steps,
      exclusions=exclusions,
      relayhost=config.Master.smtp,
      subject='buildbot %(result)s in %(projectName)s on %(builder)s, '
              'revision %(revision)s',
      extraRecipients=ActiveMaster.tree_closing_notification_recipients,
      lookup=master_utils.FilterDomain(),
      forgiving_steps=forgiving_steps,
      tree_status_url=ActiveMaster.tree_status_url))

if GOOD_REVISIONS:
  import goodrevisions
  # This is the list of builders with their respective list of critical steps
  # that all need to succeed to mark a revision as successful. A single failure
  # in any of the steps of any of the builders will mark the revision as failed.
  good_revision_steps = {
    # ?? minutes cycle time.
    # Dependent on 'Chromium Builder (dbg)'
    'XP Tests (dbg)(1)': [
      'check deps', 'courgette_unittests', 'googleurl_unittests',
      'media_unittests', 'printing_unittests', 'remoting_unittests',
      'ipc_tests', 'sync_unit_tests', 'unit_tests', 'app_unittests',
      'installer_util_unittests',
    ],
    'XP Tests (dbg)(2)': [
      'ui_tests',
    ],
    'XP Tests (dbg)(3)': [
      'ui_tests',
    ],
    'XP Tests (dbg)(4)': [
      'ui_tests', 'browser_tests',
    ],
    # ~7 minutes cycle time. (Build base, net and sandbox)
    'Modules XP (dbg)': [
      'base_unittests', 'net_unittests',
    ],
    'Interactive Tests (dbg)': [
      'interactive_ui_tests',
    ],
    # ~5 minutes cycle time.
    # Dependent on 'Chromium Mac Builder (dbg)'
    'Mac10.5 Tests (dbg)(1)': [
      'check deps', 'googleurl_unittests', 'media_unittests',
      'printing_unittests', 'remoting_unittests',
      'ipc_tests', 'sync_unit_tests', 'unit_tests', 'app_unittests',
      'interactive_ui_tests',
    ],
    'Mac10.5 Tests (dbg)(2)': [
      'ui_tests',
    ],
    'Mac10.5 Tests (dbg)(3)': [
      'browser_tests',
    ],
    # ~6 minutes cycle time. (Builds base and net)
    'Modules Mac10.5 (dbg)': [
      'base_unittests', 'net_unittests',
    ],
    # ~7 minutes cycle time.
    # Dependent on 'Chromium Linux Builder (dbg)'
    'Linux Tests (dbg)(1)': [
      'check deps', 'googleurl_unittests', 'media_unittests',
      'printing_unittests', 'remoting_unittests', 'browser_tests', 'ui_tests',
    ],
    'Linux Tests (dbg)(2)': [
      'ipc_tests', 'sync_unit_tests', 'unit_tests', 'app_unittests', 'ui_tests',
      'interactive_ui_tests',
    ],
    # ~4 minutes cycle time. (Builds base and net)
    'Modules Linux (dbg)': [
      'base_unittests', 'net_unittests',
    ],
    'Linux Builder (ChromiumOS)': [
      'compile',
      'base_unittests', 'googleurl_unittests', 'media_unittests',
      'net_unittests', 'printing_unittests', 'remoting_unittests',
      'ipc_tests', 'sync_unit_tests', 'unit_tests', 'app_unittests',
    ],
    'Linux Builder (ChromiumOS dbg)': [
      'compile',
      'base_unittests', 'googleurl_unittests', 'media_unittests',
      'net_unittests', 'printing_unittests', 'remoting_unittests',
      'ipc_tests', 'sync_unit_tests', 'unit_tests', 'app_unittests',
    ],
  }
  c['status'].append(goodrevisions.GoodRevisions(
      good_revision_steps=good_revision_steps,
      store_revisions_url=ActiveMaster.store_revisions_url))


if PERF_NOTIFIER:
  categories_steps = {
    '': ['update'],
    'builder_testers': [
      # Perf tests
      'dom_perf',
      'memory_test',
      'new_tab_ui_cold_test',
      'new_tab_ui_warm_test',
      'page_cycler_bloat-http',
      'page_cycler_dhtml',
      'page_cycler_intl1',
      'page_cycler_intl2',
      'page_cycler_morejs',
      'page_cycler_moz',
      'page_cycler_moz-http',
      'startup_test',
      'tab_switching_test',
     ],
    'builders_windows': [],
    'builders_compile': []
  }
  exclusions = { }
  forgiving_steps = ['update scripts', 'update', 'svnkill', 'taskkill',
                     'archived build', 'Start Crash Handler']
  c['status'].append(perf_notifier.PerfNotifier(
      fromaddr=ActiveMaster.from_address,
      categories_steps=categories_steps,
      exclusions=exclusions,
      relayhost=config.Master.smtp,
      status_header='Perf alert on "%(builder)s":\n%(steps)s',
      subject='buildbot %(result)s in %(projectName)s on %(builder)s, '
              'revision %(revision)s',
      extraRecipients=['cmp@google.com'],
      lookup=master_utils.FilterDomain(),
      forgiving_steps=forgiving_steps))

if ActiveMaster.base_app_url:
  from master.status_push import HttpStatusPush
  c['status'].append(HttpStatusPush(
      ActiveMaster.base_app_url + '/status-receiver',
      blackList=('requestSubmitted', 'requestCancelled', 'buildsetSubmitted',
                 'builderAdded', 'builderChangedState', 'buildStarted',
                 'buildETAUpdate', 'stepStarted', 'stepTextChanged',
                 'stepText2Changed', 'stepETAUpdate', 'logStarted',
                 'logFinished', 'buildedRemoved', 'slaveConnected',
                 'slaveDisconnected')))


####### PROJECT IDENTITY

# the 'projectName' string will be used to describe the project that this
# buildbot is working on. For example, it is used as the title of the
# waterfall HTML page. The 'projectURL' string will be used to provide a link
# from buildbot HTML pages to your project's home page.

c['projectName'] = ActiveMaster.project_name
c['projectURL'] = config.Master.project_url

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.Waterfall page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = 'http://build.chromium.org/buildbot/waterfall/'
