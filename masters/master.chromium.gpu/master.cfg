# Copyright (c) 2011 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.changes import svnpoller
from buildbot.scheduler import Dependent
from buildbot.scheduler import Scheduler

from master import build_utils
from master import master_config
from master import master_utils
from master import slaves_list
from master.factory import chromium_factory

import config

ActiveMaster = config.Master.ChromiumGPU

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# Disable compression for the stdio files.
c['logCompressionLimit'] = False


####### CHANGESOURCES

def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude .DEPS.git from triggering builds on chrome.
  if path == 'src/.DEPS.git':
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

# Polls config.Master.trunk_url for changes
chromium_rev = 'http://src.chromium.org/viewvc/chrome?view=rev&revision=%s'
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

c['change_source'] = [trunk_poller]


####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.
s_gpu_win_dbg = Scheduler(name='gpu-win-dbg',
                          branch='src',
                          treeStableTimer=60,
                          builderNames=['GPU Win Builder (dbg)'])

s_gpu_win_dbg_dependent = Dependent('gpu-win-dbg-dependent',
                                    s_gpu_win_dbg,
                                    ['GPU Win7 Tests (dbg)(1)',
                                     'GPU Win7 x64 Tests (dbg)(1)',
                                     'GPU Vista Tests (dbg)(1)',
                                     'GPU Vista Tests (dbg)(2)',
                                     'GPU Win7 Tests (dbg)(2)',
                                     'GPU Win7 x64 Tests (dbg)(2)',
                                     'GPU Vista x64 Tests (dbg)',
                                    ])

s_gpu_win_rel = Scheduler(name='gpu-win-rel',
                          branch='src',
                          treeStableTimer=60,
                          builderNames=['GPU Win Builder'])

s_gpu_win_rel_dependent = Dependent('gpu-win-rel-dependent',
                                    s_gpu_win_rel,
                                    ['GPU Win7 Tests'])

s_gpu_mac_dbg = Scheduler(name='gpu-mac-dbg',
                          branch='src',
                          treeStableTimer=60,
                          builderNames=['GPU Mac Builder (dbg)'])

s_gpu_mac_dbg_dependent = Dependent('gpu-mac-dbg-dependent',
                                    s_gpu_mac_dbg,
                                    ['GPU Mac 10.6 Tests (dbg)',
                                     'GPU Mac 10.5 Tests (dbg)'])

s_gpu_mac_rel = Scheduler(name='gpu-mac-rel',
                          branch='src',
                          treeStableTimer=60,
                          builderNames=['GPU Mac 10.6 Tests'])

s_gpu_linux_dbg = Scheduler(name='gpu-linux-dbg',
                            branch='src',
                            treeStableTimer=60,
                            builderNames=['GPU Linux Builder (dbg)'])

s_gpu_linux_dbg_dependent = Dependent('gpu-linux-dbg-dependent',
                                      s_gpu_linux_dbg,
                                      ['GPU Linux Tests (dbg)(1)',
                                       'GPU Linux Tests (dbg)(2)'])

s_gpu_linux_rel = Scheduler(name='gpu-linux-rel',
                            branch='src',
                            treeStableTimer=60,
                            builderNames=['GPU Linux Tests x64'])

c['schedulers'] = [s_gpu_win_dbg,
                   s_gpu_win_dbg_dependent,
                   s_gpu_win_rel,
                   s_gpu_win_rel_dependent,
                   s_gpu_mac_dbg,
                   s_gpu_mac_dbg_dependent,
                   s_gpu_mac_rel,
                   s_gpu_linux_dbg,
                   s_gpu_linux_dbg_dependent,
                   s_gpu_linux_rel]

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

# Using src/webkit is necessary for running the layout tests on Windows.
# However, the 'all' project resides in src/build. Thus, build in one place and
# test in another. Thus, it is impossible to build and test on the same Windows
# bot.
m_win = chromium_factory.ChromiumFactory('src/build', 'win32')
m_win_webkit = chromium_factory.ChromiumFactory('src/webkit', 'win32')
m_mac = chromium_factory.ChromiumFactory('src/build', 'mac')
m_linux = chromium_factory.ChromiumFactory('src/build', 'linux2')

# Some shortcut to simplify the code below.
F_WIN = m_win.ChromiumGPUFactory
F_WIN_WEBKIT = m_win_webkit.ChromiumGPUFactory
F_MAC = m_mac.ChromiumGPUFactory
F_LINUX = m_linux.ChromiumGPUFactory

win_dbg_archive = master_config.GetArchiveUrl('ChromiumGPU',
                                              'GPU Win Builder (dbg)',
                                              'gpu-win-dbg',
                                              'win32')

win_rel_archive = master_config.GetArchiveUrl('ChromiumGPU',
                                              'GPU Win Builder',
                                              'gpu-win-rel',
                                              'win32')

mac_dbg_archive = master_config.GetArchiveUrl('ChromiumGPU',
                                              'GPU Mac Builder (dbg)',
                                              'gpu-mac-dbg',
                                              'mac')

linux_dbg_archive = master_config.GetArchiveUrl('ChromiumGPU',
                                                'GPU Linux Builder (dbg)',
                                                'gpu-linux-dbg',
                                                'linux')

f_win_build_dbg = F_WIN(project='all.sln;chromium_gpu_builder',
                          target='Debug',
                          slave_type='Builder')

f_win_build_rel = F_WIN(project='all.sln;chromium_gpu_builder',
                          target='Release',
                          slave_type='Builder',
                          factory_properties={
                            'gclient_env': {'GYP_DEFINES': 'fastbuild=1'}})

f_win_test_dbg = F_WIN_WEBKIT(
    target='Debug',
    slave_type='Tester',
    build_url=win_dbg_archive,
    tests=['webkit_gpu', 'gpu_tests'],
    factory_properties={'archive_webkit_results': True,
                        'gs_bucket': 'gs://chromium-browser-layout',
                        'enable_hardware_gpu': True,
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

f_win_test_rel = F_WIN_WEBKIT(
    target='Release',
    slave_type='Tester',
    build_url=win_rel_archive,
    tests=['webkit_gpu', 'gpu_tests', 'frame_rate'],
    factory_properties={'archive_webkit_results': True,
                        'gs_bucket': 'gs://chromium-browser-layout',
                        'enable_hardware_gpu': True,
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

f_mac_build_dbg = F_MAC(target='Debug',
                        slave_type='Builder',
                        options=['--', '-project', 'all.xcodeproj',
                                 '-target', 'chromium_gpu_builder'])

f_mac_build_test_rel = F_MAC(
    target='Release',
    options=['--', '-project', 'all.xcodeproj',
             '-target', 'chromium_gpu_builder'],
    tests=['webkit_gpu', 'gpu_tests', 'frame_rate'],
    factory_properties={'archive_webkit_results': True,
                        'gs_bucket': 'gs://chromium-browser-layout',
                        'enable_hardware_gpu': True,
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

f_mac_test_dbg = F_MAC(
    target='Debug',
    slave_type='Tester',
    build_url=mac_dbg_archive,
    tests=['webkit_gpu', 'gpu_tests'],
    factory_properties={'archive_webkit_results': True,
                        'gs_bucket': 'gs://chromium-browser-layout',
                        'enable_hardware_gpu': True,
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

f_linux_build_dbg = F_LINUX(target='Debug',
                            slave_type='Builder',
                            options=['chromium_gpu_builder'])

f_linux_build_test_rel = F_LINUX(
    target='Release',
    options=['chromium_gpu_builder'],
    tests=['webkit_gpu', 'gpu_tests', 'frame_rate'],
    factory_properties={'archive_webkit_results': True,
                        'gs_bucket': 'gs://chromium-browser-layout',
                        'enable_hardware_gpu': True,
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

f_linux_test_dbg = F_LINUX(
    target='Debug',
    slave_type='Tester',
    build_url=linux_dbg_archive,
    tests=['webkit_gpu', 'gpu_tests'],
    factory_properties={'archive_webkit_results': True,
                        'gs_bucket': 'gs://chromium-browser-layout',
                        'enable_hardware_gpu': True,
                        'test_results_server': 'test-results.appspot.com',
                        'generate_gtest_json': True})

# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_win_1 = {'name': 'GPU Win Builder (dbg)',
           'factory': f_win_build_dbg,
           'builddir': 'gpu-win-dbg'}
b_win_2 = {'name': 'GPU Win Builder',
           'factory': f_win_build_rel,
           'builddir': 'gpu-win-rel'}
b_win_3 = {'name': 'GPU Win7 Tests (dbg)(1)', 'factory': f_win_test_dbg}
b_win_4 = {'name': 'GPU Win7 x64 Tests (dbg)(1)', 'factory': f_win_test_dbg}
b_win_5 = {'name': 'GPU Vista Tests (dbg)(1)', 'factory': f_win_test_dbg}
b_win_6 = {'name': 'GPU Vista Tests (dbg)(2)', 'factory': f_win_test_dbg}
b_win_7 = {'name': 'GPU Win7 Tests (dbg)(2)', 'factory': f_win_test_dbg}
b_win_8 = {'name': 'GPU Win7 x64 Tests (dbg)(2)', 'factory': f_win_test_dbg}
b_win_9 = {'name': 'GPU Vista x64 Tests (dbg)', 'factory': f_win_test_dbg}
b_win_10 = {'name': 'GPU Win7 Tests', 'factory': f_win_test_rel}

b_mac_1 = {'name': 'GPU Mac Builder (dbg)',
           'factory': f_mac_build_dbg,
           'builddir': 'gpu-mac-dbg'}
b_mac_2 = {'name': 'GPU Mac 10.6 Tests',
           'factory': f_mac_build_test_rel,
           'builddir': 'gpu-mac-rel'}
b_mac_3 = {'name': 'GPU Mac 10.6 Tests (dbg)', 'factory': f_mac_test_dbg}
b_mac_4 = {'name': 'GPU Mac 10.5 Tests (dbg)', 'factory': f_mac_test_dbg}

b_linux_1 = {'name': 'GPU Linux Builder (dbg)',
             'factory': f_linux_build_dbg,
             'builddir': 'gpu-linux-dbg'}
b_linux_2 = {'name': 'GPU Linux Tests (dbg)(1)', 'factory': f_linux_test_dbg}
b_linux_3 = {'name': 'GPU Linux Tests (dbg)(2)', 'factory': f_linux_test_dbg}
b_linux_4 = {'name': 'GPU Linux Tests x64',
             'factory': f_linux_build_test_rel,
             'builddir': 'gpu-linux-rel-x64'}

# Order them by OS type, target type, and OS version.
c['builders'] = [
  b_win_2,  # Release builder
  b_win_10, # Release Tester 
  b_win_1,  # Debug builder
  b_win_5,  # Windows Debug Testers
  b_win_6,
  b_win_9,
  b_win_3,
  b_win_7,
  b_win_4,
  b_win_8,
  b_mac_2,
  b_mac_1,
  b_mac_3,
  b_mac_4,
  b_linux_4,
  b_linux_1,
  b_linux_2,
  b_linux_3,
]

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumGPU')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)

####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
                             public_html='../master.chromium/public_html')

####### PROJECT IDENTITY

# Buildbot master url:
c['buildbotURL'] = 'http://build.chromium.org/buildbot/gpu/'
