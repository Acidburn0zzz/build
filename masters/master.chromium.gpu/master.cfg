# Copyright (c) 2010 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.changes import svnpoller
from buildbot.scheduler import Dependent
from buildbot.scheduler import Scheduler

from master import build_utils
from master import master_config
from master import master_utils
from master import slaves_list
from master.factory import chromium_factory

import config

ActiveMaster = config.Master.ChromiumGPU

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# Disable compression for the stdio files.
c['logCompressionLimit'] = False


####### CHANGESOURCES

def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude o3d from triggering builds on chrome for now.
  if path.startswith('src/o3d/'):
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

# Polls config.Master.trunk_url for changes
chromium_rev = 'http://src.chromium.org/viewvc/chrome?view=rev&revision=%s'
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

c['change_source'] = [trunk_poller]


####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.
s_gpu_win_dbg = Scheduler(name='gpu_win_dbg',
                          branch='src',
                          treeStableTimer=60,
                          builderNames=['GPU Win Builder (dbg)'])

s_gpu_win_dbg_dependent = Dependent('gpu_win_dbg_dependent',
                                    s_gpu_win_dbg,
                                    ['GPU Vista Tests (dbg)'])

c['schedulers'] = [s_gpu_win_dbg,
                   s_gpu_win_dbg_dependent]

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_win = chromium_factory.ChromiumFactory('src/build', 'win32')

# Some shortcut to simplify the code below.
F_WIN = m_win.ChromiumFactory

win_archive = master_config.GetArchiveUrl('ChromiumGPU',
                                          'GPU Win Builder (dbg)',
                                          'gpu-win-dbg',
                                          'win32')

f_win_builder_dbg = F_WIN('gpu-win-1',
                          project='all.sln;chromium_gpu_builder',
                          target='Debug',
                          slave_type='Builder')

f_vista_tests_dbg = F_WIN('gpu-win-2',
                          target='Debug',
                          slave_type='Tester',
                          build_url=win_archive,
                          tests=['webkit_gpu', 'gpu_tests'])

# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_win_builder_dbg = {'name': 'GPU Win Builder (dbg)',
                     'factory': f_win_builder_dbg,
                     'builddir': 'gpu-win-dbg'}
b_vista_tests_dbg = {'name': 'GPU Vista Tests (dbg)',
                     'factory': f_vista_tests_dbg}

c['builders'] = [
  b_win_builder_dbg,
  b_vista_tests_dbg
]

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumGPU')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)

####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
                             public_html='../master.chromium/public_html')

####### PROJECT IDENTITY

# Buildbot master url:
c['buildbotURL'] = 'http://build.chromium.org/buildbot/gpu/'
