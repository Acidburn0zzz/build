# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.changes import svnpoller
from buildbot.scheduler import Scheduler
from buildbot.scheduler import Triggerable

from master import build_utils
from master import master_config
from master import master_utils
from master import slaves_list
from master.factory import chromium_factory

import config

ActiveMaster = config.Master.ChromiumEndure

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# Disable compression for the stdio files.
c['logCompressionLimit'] = False

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

####### CHANGESOURCES

def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude .DEPS.git from triggering builds on chrome.
  if path == 'src/.DEPS.git':
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

# Polls config.Master.trunk_url for changes
chromium_rev = 'http://src.chromium.org/viewvc/chrome?view=rev&revision=%s'
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

c['change_source'] = [trunk_poller]

####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.
s_chromium = Scheduler(name='chromium',
                       branch='src',
                       treeStableTimer=60,
                       builderNames=['Linux QA Perf (0)',
                                     'Linux QA Perf (1)',
                                     'Linux QA Perf (2)',
                                     'Linux QA Perf (3)',
                                     'Linux QA Perf (4)',
                                    ])

c['schedulers'] = [s_chromium]

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_linux = chromium_factory.ChromiumFactory('src/build', 'linux2')

# Some shortcut to simplify the code below.
F_LINUX = m_linux.ChromiumFactory

f_linux_perf0 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['endure_control_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf1 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['endure_gmail_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf2 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['endure_docs_tests',
                               'endure_plus_tests',
                               'endure_indexeddb_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf3 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['endure_gmail_wpr_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf4 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['endure_docs_wpr_tests',
                               'endure_plus_wpr_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_linux_perf0 = {
  'name': 'Linux QA Perf (0)',
  'factory': f_linux_perf0,
  'auto_reboot': False,
}
b_linux_perf1 = {
  'name': 'Linux QA Perf (1)',
  'factory': f_linux_perf1,
  'auto_reboot': False,
}
b_linux_perf2 = {
  'name': 'Linux QA Perf (2)',
  'factory': f_linux_perf2,
  'auto_reboot': False,
}
b_linux_perf3 = {
  'name': 'Linux QA Perf (3)',
  'factory': f_linux_perf3,
  'auto_reboot': False,
}
b_linux_perf4 = {
  'name': 'Linux QA Perf (4)',
  'factory': f_linux_perf4,
  'auto_reboot': False,
}

c['builders'] = [
  b_linux_perf0,
  b_linux_perf1,
  b_linux_perf2,
  b_linux_perf3,
  b_linux_perf4,
]

####### BUILDSLAVES

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumEndure')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)

####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'],
    enable_http_status_push=ActiveMaster.is_production_host)

####### PROJECT IDENTITY

# The 'projectName' string will be used to describe the project that this
# buildbot is working on. For example, it is used as the title of the
# waterfall HTML page. The 'projectURL' string will be used to provide a link
# from buildbot HTML pages to your project's home page.

c['projectName'] = ActiveMaster.project_name
c['projectURL'] = config.Master.project_url

# The 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.Waterfall page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = 'http://build.chromium.org/p/chromium.endure/'
