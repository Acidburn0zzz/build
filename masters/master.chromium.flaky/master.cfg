# -*- python -*-
# ex: set syntax=python:

# Copyright (c) 2011 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.scheduler import Periodic

from master import build_utils
from master import chromium_step
from master import master_utils
from master import slaves_list
from master.factory import chromium_factory

import config

ActiveMaster = config.Master.ChromiumFlaky

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# 'slavePortnum' defines the TCP port to listen on. This must match the value
# configured into the buildslaves (with their --master option)
c['slavePortnum'] = ActiveMaster.slave_port

####### DATABASE

import os
if os.path.isfile('.dbconfig'):
  values = {}
  execfile('.dbconfig', values)
  if 'password' not in values:
    raise Exception('could not get db password')

  c['db_url'] = 'postgresql://%s:%s@%s/%s' % (
      values['username'], values['password'],
      values.get('hostname', 'localhost'), values['dbname'])

####### SCHEDULERS

# Keep the bots busy all the time by scheduling builds very frequently.
s_chromium_periodic = Periodic(name="all-the-time",
                               builderNames=['Linux Flaky Tests (1)',
                                             'Linux Flaky Tests (2)',
                                             'Linux Flaky Tests (3)'],
                               periodicBuildTimer=60)  # in seconds

c['schedulers'] = [s_chromium_periodic]

# Avoid having many requests pending by merging everything.
def mergeRequests(builder, request1, request2):
	return True
c['mergeRequests'] = mergeRequests

####### BUILDERS

# buildbot/process/factory.py provides several BuildFactory classes you can
# start with, which implement build processes for common targets (GNU
# autoconf projects, CPAN perl modules, etc). The factory.BuildFactory is the
# base class, and is configured with a series of BuildSteps. When the build
# is run, the appropriate buildslave is told to execute each Step in turn.

# the first BuildStep is typically responsible for obtaining a copy of the
# sources. There are source-obtaining Steps in buildbot/process/step.py for
# CVS, SVN, and others.

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_linux = chromium_factory.ChromiumFactory('src/build',
                                           target_platform='linux2')

f_chromium_linux_flaky = m_linux.ChromiumFactory(
    clobber=True,
    factory_properties={'lkgr': True},
    options=['base_unittests', 'net_unittests'],
    tests=['base', 'net'])

# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_chromium_linux_flaky_1 = {
  'name': 'Linux Flaky Tests (1)',
  'builddir': 'chromium-linux-flaky-1',
  'factory': f_chromium_linux_flaky,
  'auto_reboot': True,
}

b_chromium_linux_flaky_2 = {
  'name': 'Linux Flaky Tests (2)',
  'builddir': 'chromium-linux-flaky-2',
  'factory': f_chromium_linux_flaky,
  'auto_reboot': True,
}

b_chromium_linux_flaky_3 = {
  'name': 'Linux Flaky Tests (3)',
  'builddir': 'chromium-linux-flaky-3',
  'factory': f_chromium_linux_flaky,
  'auto_reboot': True,
}

c['builders'] = [b_chromium_linux_flaky_1,
                 b_chromium_linux_flaky_2,
                 b_chromium_linux_flaky_3]

# Associate the slaves to the builders. The configuration is in slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumFlaky')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])


####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)


####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
                             public_html="../master.chromium.git/public_html")

####### PROJECT IDENTITY

c['projectName'] = ActiveMaster.project_name
c['projectURL'] = config.Master.project_url
c['buildbotURL'] = 'http://build.chromium.org/p/chromium.flaky/'

